{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"In\u00edcio","text":"<p>  Google Meet (Acesso remoto)   Grupo do WhatsApp  </p>"},{"location":"index.html#conteudo-do-curso","title":"Conte\u00fado do curso","text":""},{"location":"index.html#capitulo-1-primeiros-passos","title":"Cap\u00edtulo 1: Primeiros passos","text":"<p>Neste cap\u00edtulo vamos apresentar o ambiente de desenvolvimento do Jupyter Lab e introduzir as linguagens Markdown e Python. Al\u00e9m disso, vamos ensinar como instalar o Anaconda para utilizar o Jupyter Lab com o Python.</p>  Instala\u00e7\u00e3o do ambiente  A interface do Jupyter Lab  Introdu\u00e7\u00e3o ao Markdown  Introdu\u00e7\u00e3o ao Python"},{"location":"index.html#capitulo-2-saida-de-dados","title":"Cap\u00edtulo 2: Sa\u00edda de dados","text":"<p>Neste cap\u00edtulo, exploraremos a fun\u00e7\u00e3o <code>print()</code>, a fun\u00e7\u00e3o <code>display()</code>, a formata\u00e7\u00e3o de strings e o m\u00e9todo <code>.format()</code>. Tamb\u00e9m aprenderemos a expandir a linguagem Python por meio de m\u00f3dulos e pacotes, al\u00e9m de utilizar os m\u00f3dulos do IPython em conjunto com a fun\u00e7\u00e3o <code>display()</code>. Por fim, veremos como criar textos enriquecidos em Markdown, incluindo equa\u00e7\u00f5es, tabelas e imagens.</p>  Textos ricos em Markdown  Sa\u00edda em texto simples  Formata\u00e7\u00e3o de strings  M\u00f3dulos e pacotes"},{"location":"sobre.html","title":"Mais informa\u00e7\u00f5es","text":"<p>  Google Meet (Acesso remoto)   Grupo do WhatsApp  </p> <p>Este curso tem como objetivo apresentar os fundamentos da linguagem de programa\u00e7\u00e3o Python. Durante o curso, ser\u00e3o abordados conceitos essenciais, como vari\u00e1veis, tipos de dados simples e compostos, fun\u00e7\u00f5es, controle de fluxo, la\u00e7os de repeti\u00e7\u00e3o, m\u00f3dulos e uma introdu\u00e7\u00e3o \u00e0 programa\u00e7\u00e3o orientada a objetos. Embora o foco principal seja a linguagem de programa\u00e7\u00e3o, exemplos pr\u00e1ticos das \u00e1reas de engenharia e matem\u00e1tica ser\u00e3o utilizados para contextualizar e enriquecer o aprendizado. As aulas ser\u00e3o estruturadas com base em Notebooks com o Jupyter Lab, um formato de documento interativo que combina textos, t\u00edtulos, figuras, equa\u00e7\u00f5es e c\u00f3digos Python, promovendo uma integra\u00e7\u00e3o eficiente entre teoria e pr\u00e1tica.</p> <p>As atividades pr\u00e1ticas semanais ser\u00e3o realizadas presencialmente no laborat\u00f3rio de inform\u00e1tica IA Lab no bloco de direito da UFAC, permitindo aos participantes consolidar os conceitos aprendidos por meio da aplica\u00e7\u00e3o direta. Finalmente, a presen\u00e7a e a entrega dos Notebooks desenvolvidos durante o curso ser\u00e3o utilizadas como crit\u00e9rios de avalia\u00e7\u00e3o.</p>"},{"location":"sobre.html#informacoes-do-curso","title":"Informa\u00e7\u00f5es do curso","text":"<p>Carga hor\u00e1ria: 24 horas</p> <p>Hor\u00e1rio: 8h as 11hs (5\u00aa feira)</p> <p>In\u00edcio: 27 de fevereiro de 2025</p> <p>Link para inscri\u00e7\u00e3o: https://forms.gle/XGEn2feL2qj1hMEc7</p>"},{"location":"sobre.html#local-do-curso","title":"Local do curso","text":"<p>Laborat\u00f3rio de Intelig\u00eancia Artificial do Curso de Engenharia El\u00e9trica - Bloco de Direito</p>"},{"location":"sobre.html#plataformas-contato","title":"Plataformas &amp; contato","text":"<p>Grupo do WhatsAPP: https://chat.whatsapp.com/JPSWWNuegVKKWH1FpXEhMX</p> <p>Material did\u00e1tico e outras informa\u00e7\u00f5es: Este site</p>"},{"location":"sobre.html#staff","title":"Staff","text":"<ul> <li> <p>Prof. Dr. Lucas Lima Rodrigues</p> </li> <li> <p></p> <p>Prof. Dr. Omar Alexander Chura Vilcanqui</p> </li> <li> <p></p> <p>Ian Oliveira Teixeira (Discente)</p> </li> <li> <p></p> <p>Clarice Moreira de Oliveira (Discente)</p> </li> </ul>"},{"location":"primeiros-passos/instalacao.html","title":"Introdu\u00e7\u00e3o ao Jupyter","text":""},{"location":"primeiros-passos/instalacao.html#mas-afinal-o-que-e-o-jupyter-notebok","title":"Mas afinal o que \u00e9 o Jupyter Notebok?","text":"<p>O Notebook \u00e9 um conceito revolucion\u00e1rio, pois permite unir c\u00f3digo e texto, assim cada funcionalidade pode ser explicada detalhadamente. Voc\u00ea tamb\u00e9m pode criar funcionalidades din\u00e2micas, como gr\u00e1ficos, an\u00e1lise de dados ou outros c\u00e1lculos, em tempo real.</p> <p>Utilizando o Jupyter \u00e9 poss\u00edvel escrever o trabalho da faculdade, relat\u00f3rios de est\u00e1gio, fazer anota\u00e7\u00f5es para consolidar o aprendizado, desenvolver os est\u00e1gios iniciais da sua pesquisa cient\u00edfica, ou criar este material did\u00e1tico que voc\u00ea esta lendo neste momento. Veja abaixo algumas imagens do que o Jupyter \u00e9 capaz.</p> Imagem retirada do site do Jupyter Notebook. <p><code>Voc\u00ea ser\u00e1 capaz de fazer algo parecido com isso em algumas cap\u00edtulos!</code></p> <p>Por padr\u00e3o, os c\u00f3digos do Jupyter Notebook s\u00e3o feitos na linguagem de programa\u00e7\u00e3o Python. \u00c9 poss\u00edvel trabalhar com outras linguagens, por\u00e9m n\u00e3o ser\u00e1 abordado neste curso. O texto \u00e9 feito atrav\u00e9s da linguagem Markdown, uma linguagem de marca\u00e7\u00e3o (ou cria\u00e7\u00e3o?) t\u00e3o simples que \u00e9 poss\u00edvel dominar os conceitos b\u00e1sicos em menos de 10 minutos. Embora simples, o Markdown \u00e9 uma linguagem poderosa! Por exemplo, partes do site de apoio do curso foi feito utilizando a linguagem Markdown, assim como boa parte desse site.</p> <p>Curiosidade: O nome Jupyter vem de [Ju]lia, [Pyt]hon [e R], as principais linguagens de programa\u00e7\u00e3o utilizadas pelos cientistas de dados. \u00c9 poss\u00edvel utilizar o Jupyter com essas tr\u00eas linguagens, e com outras, como C++.</p>"},{"location":"primeiros-passos/instalacao.html#e-o-jupyter-lab","title":"E o Jupyter Lab?","text":"<p>O <code>JupyterLab</code> \u00e9 uma evolu\u00e7\u00e3o do antigo (Por\u00e9m, ainda bastante usado) ambiente de desenvolvimento <code>Jupyter Notebook</code>. Este ambiente de desenvolvimento utiliza tecnologias web mais modernas que o seu velho companheiro, possui alta performance e possui um interface mais flex\u00edvel e poderosa.</p> Imagem retirada do site do Jupyter Notebook. Imagem retirada do site Towards Data Science."},{"location":"primeiros-passos/instalacao.html#anaconda","title":"Anaconda","text":"<p>Existem v\u00e1rias maneiras de instalar um ambiente de desenvolvimento de Python na sua m\u00e1quina. Uma das maneiras mais pr\u00e1ticas \u00e9 atrav\u00e9s do Anaconda.</p> <p>Anaconda \u00e9 uma distribui\u00e7\u00e3o gratuita e de c\u00f3digo aberto para as linguagens Python e R. Os principais componentes do Anaconda s\u00e3o:</p> <ol> <li> <p>Conda: Um sistema de gerenciamento de pacotes e ambientes que permite instalar, executar e atualizar pacotes e suas depend\u00eancias de maneira eficiente. Conda \u00e9 independente de linguagem, podendo gerenciar pacotes de Python, R e outros.</p> </li> <li> <p>Pacotes pr\u00e9-instalados: A distribui\u00e7\u00e3o inclui mais de 300 pacotes populares para engenharia e intelig\u00eancia artificial, como NumPy, Scipy, Sympy, matplotlib, pandas, scikit-learn, TensorFlow, entre outros. Al\u00e9m disso, oferece acesso a um reposit\u00f3rio com mais de 8.000 pacotes adicionais que podem ser instalados conforme a necessidade.</p> </li> </ol>"},{"location":"primeiros-passos/instalacao.html#instalacao-do-anaconda-windows","title":"Instala\u00e7\u00e3o do Anaconda (Windows)","text":"<ol> <li>Primeiramente acesse o site:</li> </ol> <p> https://www.anaconda.com/download/success </p> <p>Procure por Download e baixe o instalador:</p> <p>Aten\u00e7\u00e3o!</p> <p>Certifique-se que est\u00e1 baixando a vers\u00e3o do anaconda para o seu sistema operacional.</p> Imagem da p\u00e1gina de download do Anaconda. <ol> <li>Depois de baixar inicie o instalador. Siga os passos como a instala\u00e7\u00e3o de qualquer outro programa do Windows. Contudo, atente-se para selecionar <code>Add to my PATH variable</code>, como mostrado na figura abaixo:</li> </ol> Tela de instala\u00e7\u00e3o do Anaconda. <ol> <li>Ap\u00f3s a instala\u00e7\u00e3o certifique-se se o ambiente do Anaconda est\u00e1 dispon\u00edvel no terminal. Para isso, abra o terminal do Windows pelo Menu Iniciar:</li> </ol> Buscando o terminal do Windows pelo Menu Iniciar. <p>No terminal teste o seguinte comando:</p> <pre><code>conda --version\n</code></pre> <p>Isto deve retornar a sa\u00edda com a vers\u00e3o do conda instalado:</p> <pre>conda 23.11.0</pre>"},{"location":"primeiros-passos/instalacao.html#jupyter-lab-deskkop","title":"Jupyter Lab Deskkop","text":"<p>Tradicionalmente, o Jupyter Lab \u00e9 acessado pelo navegador web por meio do comando:  </p> <pre><code>jupyter lab\n</code></pre> <p>No entanto, essa abordagem pode n\u00e3o ser a mais eficiente. Felizmente, o Jupyter Lab Desktop oferece uma alternativa mais pr\u00e1tica, permitindo o acesso ao ambiente por meio de uma interface gr\u00e1fica dedicada, em vez do navegador.  </p> <p>Al\u00e9m disso, o aplicativo associa arquivos no formato <code>.ipynb</code> ao Jupyter Lab Desktop, facilitando a abertura de notebooks diretamente pelo gerenciador de arquivos.</p>"},{"location":"primeiros-passos/instalacao.html#instalacao-do-jupyter-lab-desktop","title":"Instala\u00e7\u00e3o do Jupyter Lab Desktop","text":"<ol> <li>Para instalar o Jupyter Lab basta acessar a p\u00e1gina no Github (abaixo) e baixar a vers\u00e3o correspondente ao seu sistema operacional.</li> </ol> <p> https://github.com/jupyterlab/jupyterlab-desktop </p> <ol> <li> <p>Instale normalmente seguindo os passos de instala\u00e7\u00e3o como qualquer outro programa. </p> </li> <li> <p>Depois \u00e9 s\u00f3 abrir o Jupyter Lab Desktop como qualquer outro aplicativo.</p> </li> </ol>"},{"location":"primeiros-passos/interface-do-jupyter.html","title":"A interface do Jupyter","text":"<p>Ao abrir o programa pela primeira vez voc\u00ea ir\u00e1 encontrar uma interface parecida com essa:</p> <p></p> <p>Ao clicar em \"Open File\", voc\u00ea poder\u00e1 abrir os notebooks salvos no seu pc. Voc\u00ea poder\u00e1 criar um notebook clicando em \"New Notebook\".</p> <p>Caso n\u00e3o se sinta confort\u00e1vel com o tema claro que vem por padr\u00e3o no JupyterLab \u00e9 poss\u00edvel trocar clicando no menu superior em <code>Settings/JupyterLab Theme/JupyterLab Dark</code>. Caso queira mudar o tema da barra de rolagem deixe a op\u00e7\u00e3o <code>Theme Scrollbars</code> ativa.</p> <p></p> <p>Um Notebook \u00e9 formado por uma ou mais c\u00e9lulas. Uma c\u00e9lula \u00e9 um espa\u00e7o aonde \u00e9 poss\u00edvel escrever um trecho de c\u00f3digo (Python) ou texto (c\u00f3digo Markdown).  Algumas a\u00e7\u00f5es relacionadas ao notebook e \u00e0s c\u00e9lulas podem ser executadas no painel superior da aba. A figura abaixo mostra alguns atalhos do painel superior.</p> <p></p> <p>Figura 1.1: Exemplos de c\u00e9lulas no Jupyter.</p> No. Descri\u00e7\u00e3o 1 Salvar Notebook 2 Adicionar uma nova c\u00e9lula abaixo 3 Recortar uma c\u00e9lula 4 Copiar uma c\u00e9lula 5 Colar uma c\u00e9lula 6 Executar (Compilar) uma c\u00e9lula e ir para a pr\u00f3xima c\u00e9lula 7 Parar a execu\u00e7\u00e3o do c\u00f3digo (Muito importante quando seu c\u00f3digo trava!) 8 Mudar do modo c\u00f3digo para o modo texto (Markdown) 9 Area de sele\u00e7\u00e3o de c\u00e9lulas <p>Tarefa:</p> <p>Vamos \u00e0 um exemplo. Considere os c\u00f3digos abaixo, n\u00e3o se preocupe em entend\u00ea-los agora. Considere os c\u00f3digos abaixo:</p> <p>C\u00e9lula 1: Modo texto - Markdown</p> <pre><code># Atividade 1\n----\n</code></pre> <p>C\u00e9lula 2: Modo c\u00f3digo - Python</p> <pre># Est\u00e1 c\u00e9lula est\u00e1 em Python.\n# Iremos escrever nossa primeira c\u00e9lula\nprint(\"Ol\u00e1 mundo\")\n</pre> <p>C\u00e9lula 3: Modo texto - Markdown</p> <pre>Esta c\u00e9lula est\u00e1 em Markdown e apresenta uma fun\u00e7\u00e3o quadr\u00e1tica:\n$$y(t)=t^2+2t+3$$\n</pre> <p>C\u00e9lula 4: Modo c\u00f3digo - Python</p> <pre># Esta c\u00e9lula est\u00e1 em Python e est\u00e1 plotando a equa\u00e7\u00e3o acima\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nt = np.linspace(-12, 10, num=100)\ny = t**2+2*t+3 \nplt.plot(t, y) \nplt.xlabel('t - Tempo (s)') \nplt.ylabel('y - Sa\u00edda') \nplt.title('Fun\u00e7\u00e3o quadr\u00e1tica') \nplt.show() \n</pre> <p>Copie e cole-os no seu Notebook de acordo com a linguagem indicada e depois execute-os.</p> <p>Dicas:</p> <ul> <li>Para executar a c\u00e9lula e avan\u00e7ar para a pr\u00f3xima c\u00e9lula pressione no bot\u00e3o <code>\u25b6</code> (N\u00famero 6 na Figura 1.1).</li> <li>Se necess\u00e1rio, pode-se adicionar uma c\u00e9lula abaixo clicando no <code>+</code>, representado pelo <code>n\u00famero 2</code> na Figura 1.1.</li> <li>Se necess\u00e1rio \u00e9 poss\u00edvel mover as c\u00e9lulas na regi\u00e3o <code>9</code> da Figura 1.1.</li> </ul>"},{"location":"primeiros-passos/interface-do-jupyter.html#a-interface-do-jupyter","title":"A interface do Jupyter\u00b6","text":""},{"location":"primeiros-passos/interface-do-jupyter.html#trocando-para-o-tema-escuro","title":"Trocando para o tema escuro\u00b6","text":""},{"location":"primeiros-passos/interface-do-jupyter.html#menu-de-ajuda","title":"Menu de ajuda\u00b6","text":"<p>Dentro do pr\u00f3prio Notebook \u00e9 poss\u00edvel acessar a documenta\u00e7\u00e3o oficial de muitas das \"tecnologias\" utilizada na confec\u00e7\u00e3o dos Notebooks. Isto \u00e9 bem pr\u00e1tico, pois evita aquela pesquisa no Google que nem sempre tr\u00e1s informa\u00e7\u00f5es relevantes. Por exemplo, clique em <code>Help&gt;Markdown Reference</code> e ir\u00e1 abrir uma aba com as principais refer\u00eancias da linguagem. E ainda, h\u00e1 um pequeno tutorial que voc\u00ea pode fazer mais tarde, em casa.</p> <p></p> <p>Lembre-se de sempre visitar este menu antes de fazer aquela pesquisa no google.</p>"},{"location":"primeiros-passos/interface-do-jupyter.html#criacao-e-execucao-de-celulas","title":"Cria\u00e7\u00e3o e Execu\u00e7\u00e3o de C\u00e9lulas\u00b6","text":""},{"location":"primeiros-passos/interface-do-jupyter.html#copiar-e-colar-celulas","title":"Copiar e colar c\u00e9lulas\u00b6","text":"<p>Crie um novo Notebook, nomeie como <code>interface-do-jupyter-aux</code>, recorte a c\u00e9lula 1 do seu primeiro Notebook e cole no Notebook <code>interface-do-jupyter-aux</code>.</p>"},{"location":"primeiros-passos/interface-do-jupyter.html#ordem-de-execucao-das-celulas","title":"Ordem de execu\u00e7\u00e3o das c\u00e9lulas\u00b6","text":"<p>Toda vez que uma c\u00e9lula de c\u00f3digo \u00e9 executada, os valores das vari\u00e1veis finais das vari\u00e1veis s\u00e3o salvas na mem\u00f3ria. Desta forma, ao executar uma c\u00e9lula nem sempre o resultado vai ser o mesmo.</p> <p>Tarefa:</p> <p>Para deixar mais claro este conceito considere as tr\u00eas c\u00e9lulas abaixo:</p> <p>C\u00e9lula 1: Bloco de atribui\u00e7\u00e3o da vari\u00e1vel <code>x</code>:</p> <pre># Atribua o valor 0 \u00e0 vari\u00e1vel 'x'\nx=0\n</pre> <p>C\u00e9lula 2: Incremente a vari\u00e1vel <code>x</code> em <code>1</code></p> <pre># Incremente esta vari\u00e1vel em 1\nx=x+1\n</pre> <p>C\u00e9lula 3: Imprima o valor da vari\u00e1vel <code>x</code></p> <pre># Mostre o valor de 'x'\nx\n</pre> <p></p> <p>Para ficar claro, copie as tr\u00eas c\u00e9lulas e fa\u00e7a a seguinte sequ\u00eancia de execu\u00e7\u00e3o:</p> <p>\u200b\tC\u00e9lula 1 $\\rightarrow$ C\u00e9lula 2 $\\rightarrow$ C\u00e9lula 2 $\\rightarrow$ C\u00e9lula 2 $\\rightarrow$ C\u00e9lula 3 $\\rightarrow$  C\u00e9lula 2 $\\rightarrow$ C\u00e9lula 3 $\\rightarrow$  C\u00e9lula 1 $\\rightarrow$ C\u00e9lula 3</p> <p>Dicas:</p> <ul> <li>Selecione a c\u00e9lula e utilize o atalho <code>Ctrl+Enter</code> para executar a c\u00e9lula pelo teclado.</li> <li>Use as teclas \u2191\u00a0e\u00a0\u2193\u00a0para movimentar entre as c\u00e9lulas.</li> </ul> <p>Observe que toda vez que uma c\u00e9lula \u00e9 executada h\u00e1 um aumento da numera\u00e7\u00e3o do lado direito da c\u00e9lula. Esta numera\u00e7\u00e3o indica a ordem que as c\u00e9lulas foram executada.</p>"},{"location":"primeiros-passos/interface-do-jupyter.html#resentando-o-kernel","title":"Resentando o Kernel\u00b6","text":"<p>Muitas vezes queremos limpar a mem\u00f3ria. Para isso o podemos recorrer ao menu do <code>Kernel</code> , o servidor que roda o c\u00f3digo em Python. Neste menu temos op\u00e7\u00e3o <code>Restart Kernel...</code> que apaga todas as vari\u00e1veis da mem\u00f3ria. Al\u00e9m disso existe outras op\u00e7\u00f5es como:</p> Op\u00e7\u00e3o Fun\u00e7\u00e3o Restart Kernel... Reinicia o kernel (Apaga todas as vari\u00e1veis) Restart Kernel and Clean All Outputs Reinicia o kernel e limpa todas as sa\u00eddas das c\u00e9lulas Restart Kernel and Run All Cells Reinicia o kernel e roda todo o Notebook <p></p> <p>Finalmente, reinicie o servidor e tente a c\u00e9lula 2. Observe que aconteceu um erro, pois a vari\u00e1vel x que deveria ser inicializada na c\u00e9lula 1 n\u00e3o est\u00e1 mais na mem\u00f3ria, pois o Kernel foi reiniciado.</p>"},{"location":"primeiros-passos/interface-do-jupyter.html#atalhos","title":"Atalhos\u00b6","text":"<p>O Jupyter permite o uso de v\u00e1rios atalhos que podem facilitar a nossa vida. No menu <code>Run</code> podemos ver alguns atalhos:</p> <p></p> Atalho Fun\u00e7\u00e3o Shift+Enter Rode a c\u00e9lula e avance para a pr\u00f3xima c\u00e9lula Ctrl+Enter Rode a c\u00e9lula, mas n\u00e3o avance Alt+Enter Rode a c\u00e9lula e insira outra c\u00e9lula abaixo"},{"location":"primeiros-passos/interface-do-jupyter.html#modo-de-edicao-e-modo-de-comando","title":"Modo de edi\u00e7\u00e3o e modo de comando\u00b6","text":"<p>Existem alguns atalhos que s\u00f3 podem ser acessados no modo de comando. De forma resumida:</p> <p>No modo de edi\u00e7\u00e3o voc\u00ea pode editar as c\u00e9lulas e no modo de comando voc\u00ea pode utilizar alguns atalhos relacionado \u00e0s c\u00e9lulas.</p> <p>\u00c9 poss\u00edvel ver se a c\u00e9lula est\u00e1 no modo de comando ou de edi\u00e7\u00e3o na barra de status:</p> <p></p> <p>Para acessar o modo de comando clique na regi\u00e3o esquerda fora da c\u00e9lula ou simplesmente aperte o bot\u00e3o <code>Esc</code>, e para acessar o modo de edi\u00e7\u00e3o clique dentro da c\u00e9lula ou aperte <code>Enter</code>. No modo de comando \u00e9 poss\u00edvel utilizar os seguintes atalhos:</p> Atalho Fun\u00e7\u00e3o D, D (D duas vezes) Apaga a c\u00e9lula Setas \u2191 e \u2193 Navegue entre as c\u00e9lulas A Adiciona uma c\u00e9lula acima (Above) B Adiciona uma c\u00e9lula abaixo (Below) Shift + Setas \u2191 e \u2193 Seleciona mais de uma c\u00e9lula <p>Al\u00e9m disso, \u00e9 poss\u00edvel selecionar v\u00e1rias c\u00e9lulas pressionando <code>Shift</code> e clicando com o mouse.</p>"},{"location":"primeiros-passos/introducao-ao-markdown.html","title":"Introdu\u00e7\u00e3o ao Markdown","text":"<p>Notebooks, como o Jupyter Notebook, permitem a inclus\u00e3o de c\u00e9lulas em Markdown, possibilitando que os usu\u00e1rios adicionem texto formatado, explica\u00e7\u00f5es, t\u00edtulos e outros elementos de documenta\u00e7\u00e3o diretamente ao lado do c\u00f3digo. Isso facilita a cria\u00e7\u00e3o de documentos interativos e bem estruturados, combinando c\u00f3digo execut\u00e1vel com descri\u00e7\u00f5es detalhadas e visualiza\u00e7\u00f5es.</p> <p>A linguagem Markdown, desenvolvida por John Gruber e Aaron Swartz, \u00e9 amplamente utilizada nesses notebooks devido \u00e0 sua simplicidade e efici\u00eancia. Projetada para converter texto em HTML (HyperText Markup Language), ela permite que os usu\u00e1rios formatem conte\u00fados de maneira intuitiva, tornando a documenta\u00e7\u00e3o mais clara e acess\u00edvel.</p> <p>Curiosidade:</p> <p>A linguagem Markdown foi desenvolvida por Aaron Swartz, um os fundadores do Reddit. Ela \u00e9 amplamente utilizada em foruns, blogs, p\u00e1ginas web, aplicativos como Slack, aplicativos de nota\u00e7\u00e3o como Obsidian e na escrita de documentos.</p> <p>Tarefa:</p> <p>Todo o texto deste Notebook est\u00e1 escrito em Markdown. Clique duas vezes sobre o texto e ver\u00e1 o c\u00f3digo em Markdown.</p> <p>Inicialmente temos os <code>Headings</code>, ou T\u00edtulos.</p> <p>Existe uma heran\u00e7a de t\u00edtulos, em que diferem n\u00e3o s\u00f3 o tamanho da fonte, como tamb\u00e9m sem\u00e2nticamente. Ou seja, o t\u00edtulo n\u00famero 1 \u00e9 mais importante que o t\u00edtulo n\u00famero 2, que por sua vez \u00e9 mais importante que o n\u00famero 3, e assim por diante.</p> <p>Existem 6 t\u00edtulos, que vai do t\u00edtulo 1 (mais importante e por conseguinte maior e mais destacado) at\u00e9 o t\u00edtulo 6 (menos importante e por conseguinte menor e menos destacado).</p> <p>A sintaxe \u00e9 simples:</p> <pre># T\u00edtulo 1\n## T\u00edtulo 2\n### T\u00edtulo 3\n#### T\u00edtulo 4\n##### T\u00edtulo 5\n###### T\u00edtulo 6\n</pre> <p>Em resumo, vai de acordo com a quantidade de <code>#</code>.</p> <p>Podemos escrever coment\u00e1rios em mais de uma linha. utilizando entre o coment\u00e1rio os delimitadores <code>&lt;!---</code> e <code>--&gt;</code>:</p> <pre>&lt;!---  \nEste \u00e9 um coment\u00e1rio multi-linha.\nPortanto eu posso pular uma linha e continuar escrevendo o coment\u00e1rio.\n--&gt;\nEsta frase vai aparecer, pois n\u00e3o \u00e9 um coment\u00e1rio.\n</pre> <p>Resulta em:</p> <p>Esta frase vai aparecer, pois n\u00e3o \u00e9 um coment\u00e1rio.</p> <p>Curiosidade:</p> <p>A nota\u00e7\u00e3o de coment\u00e1rio apresentada \u00e9 uma nota\u00e7\u00e3o da linguagem de marca\u00e7\u00e3o de texto HTML. Utilizamos a nota\u00e7\u00e3o em  HTML sempre que queremos fazer algo que n\u00e3o \u00e9 poss\u00edvel no Markdown nativamente.</p> <p>Tarefa:</p> <pre>&lt;!--- \nVamos tentar escrever duas palavras embaixo da outra sem nada adicional:\n--&gt;\nArroz\nFeij\u00e3o\n\n&lt;!--- \nPor fim, vamos utilizar o primeiro exemplo. Por\u00e9m vamos adicionar dois spa\u00e7os depois de \"Arroz\", resultando em \"Arroz  \"\n--&gt;\nArroz  \nFeij\u00e3o\n\u200b```\n</pre> <p>Tarefa: Tente reproduzir a senten\u00e7a abaixo:</p> <p>Animais que come\u00e7am com \"i\":</p> <p>\u00cdndio</p> <p>Igreja</p> <p>Ira</p> <p>Tarefa: Tentando escrever as frases em Markdown:</p> <p>O rato roeu a roupa do rei de roma. Eu gosto de pizza</p> <p>Dica:</p> <p>Lembre-se de usar o quebra linha (Dois espa\u00e7os).</p> <p>Tarefa:</p> <p>Normalmente colocamos palavras estrangeiras em it\u00e1lico. Coloque a palavra <code>software</code> em it\u00e1lico.</p> <pre>Engenharia de software \u00e9 uma profiss\u00e3o que tem crescido na \u00faltima d\u00e9cada.\n</pre> <p>Tarefa:</p> <p>Reproduza a frase abaixo:</p> <p>\"Um tri\u00e2ngulo \u00e9 formados por 3 lados, os lados <code>a</code>, <code>b</code> e <code>c</code>.\"</p> <p>Tarefa:</p> <p>Agora tente criar um bloco de c\u00f3digo no Markdown com a linguagem Python:</p> <pre># Este c\u00f3digo ser\u00e1 apresentado na forma de texto, em Markdown\nling = \"python\"\n\nif ling != \"python\":\n    print(\"N\u00e3o \u00e9 uma boa linguagem.\")\nelse:\n    print(\"Melhor linguagem.\")\n</pre> <p>Podemos escrever cita\u00e7\u00f5es ao utilizar o sinal de maior (<code>&gt;</code>). Veja como:</p> <pre>&gt; Agir, eis a intelig\u00eancia verdadeira. \n&gt; Serei o que quiser. Mas tenho que querer o que for. \n&gt; O \u00eaxito est\u00e1 em ter \u00eaxito, e n\u00e3o em ter condi\u00e7\u00f5es de \u00eaxito. \n&gt; Condi\u00e7\u00f5es de pal\u00e1cio tem qualquer terra larga, \n&gt; mas onde estar\u00e1 o pal\u00e1cio se n\u00e3o o fizerem ali?\n</pre> <p>Resulta em:</p> <p>Agir, eis a intelig\u00eancia verdadeira. Serei o que quiser. Mas tenho que querer o que for. O \u00eaxito est\u00e1 em ter \u00eaxito, e n\u00e3o em ter condi\u00e7\u00f5es de \u00eaxito. Condi\u00e7\u00f5es de pal\u00e1cio tem qualquer terra larga, mas onde estar\u00e1 o pal\u00e1cio se n\u00e3o o fizerem ali?</p> <p>Tarefa:</p> <p>Reproduza a seguinte frase dentro de uma cita\u00e7\u00e3o:</p> <p>\u00c1gua mole pedra dura tanto bate at\u00e9 que fura</p> <p>Tarefa:</p> <p>Fa\u00e7a uma lista de compras de supermercado.</p> <p>Tarefa:</p> <p>Crie uma lista ordenada, considerando a numera\u00e7\u00e3o como ordem de prioridade.</p> <p>Dica:</p> <p>M\u00fasicas favoritas, filmes favoritos, s\u00e9rie favoritos, linguagens de programa\u00e7\u00e3o favoritas, etc</p> <p>Tarefa:</p> <p>Abaixo tem uma receita de bolo. Tente reproduzir em Markdown o exemplo abaixo:</p> <ol> <li>Ingredientes:<ul> <li>Ovo</li> <li>Farinha de trigo</li> <li>Leite</li> <li>Fermento</li> </ul> </li> <li>Modo de preparo:<ul> <li>Bata no liquidificador o leite com o ovo</li> <li>Jogue a farinha de trigo na mistura</li> <li>Bote para assar</li> </ul> </li> </ol>"},{"location":"primeiros-passos/introducao-ao-markdown.html#introducao-ao-markdown","title":"Introdu\u00e7\u00e3o ao Markdown\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-markdown.html#titulo","title":"T\u00edtulo\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-markdown.html#comentarios","title":"Coment\u00e1rios\u00b6","text":"<p>Coment\u00e1rios s\u00e3o parte de c\u00f3digos que n\u00e3o aparecem no trecho final.</p> <pre>&lt;!--Esta frase n\u00e3o vai aparecer pois \u00e9 um coment\u00e1rio.--&gt;\n\nEsta frase vai aparecer, pois n\u00e3o \u00e9 um coment\u00e1rio.\n</pre> <p>Resulta em:</p> <p>Esta frase vai aparecer, pois n\u00e3o \u00e9 um coment\u00e1rio.</p> <p>Observe que a parte do texto que estava entre <code>&lt;!--</code> e <code>--&gt;</code> n\u00e3o aparece no seu texto final, pois \u00e9 um coment\u00e1rio. Somente a frase de baixo, que n\u00e3o \u00e9 um coment\u00e1rio, aparece.</p>"},{"location":"primeiros-passos/introducao-ao-markdown.html#comentarios-multi-linha","title":"Coment\u00e1rios multi-linha\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-markdown.html#quebra-linha","title":"Quebra linha\u00b6","text":"<p>Para quebrar uma linha em Markdown devemos utilizar dois espa\u00e7os no final da frase. Podemos utilizar, tamb\u00e9m, um espa\u00e7amento de uma linha entre uma frase e outra.</p>"},{"location":"primeiros-passos/introducao-ao-markdown.html#novo-paragrafo","title":"Novo par\u00e1grafo\u00b6","text":"<p>Para criar um novo par\u00e1grafo \u00e9 simples, basta adicionar mais de um quebra linha entre duas frase. Veja o exemplo:</p> <pre>Estou criando o primeiro par\u00e1grafo para o meu texto.\n\nAgora vou criar mais um par\u00e1grafo para o meu texto.\n</pre> <p>Resulta em:</p> <p>Estou criando o primeiro par\u00e1grafo para o meu texto.</p> <p>Agora vou criar mais um par\u00e1grafo para o meu texto.</p>"},{"location":"primeiros-passos/introducao-ao-markdown.html#enfase","title":"\u00canfase\u00b6","text":"<p>Voc\u00ea pode adicionar \u00eanfase ao seu texto, como por exemplo o negrito, o it\u00e1lico, ou at\u00e9 mesmo negrito e it\u00e1lico. Lembre-se que al\u00e9m da apar\u00eancia do seu texto, existe a sem\u00e2ntica para ser seguida. Textos em negrito devem ser lidos com for\u00e7a, intensidade, e o it\u00e1lico significa uma \u00eanfase maior.</p>"},{"location":"primeiros-passos/introducao-ao-markdown.html#negrito","title":"Negrito\u00b6","text":"<p>Sintaxe do negrito:</p> <pre>Este \u00e9 **Negrito**\nEste tamb\u00e9m \u00e9 __negrito__\n</pre> <p>Resulta em:</p> <p>Este \u00e9 Negrito  Este tamb\u00e9m \u00e9 negrito</p> <p>Em resumo, envolve-se o termo por dois asteriscos (<code>**</code>) ou por dois underlines (<code>__</code>).</p>"},{"location":"primeiros-passos/introducao-ao-markdown.html#italico","title":"It\u00e1lico\u00b6","text":"<p>Sintaxe de it\u00e1lico:</p> <pre>Este \u00e9 *it\u00e1lico*\nEste tamb\u00e9m \u00e9 _it\u00e1lico_\n</pre> <p>Resulta em:</p> <p>Este \u00e9 it\u00e1lico Este tamb\u00e9m \u00e9 it\u00e1lico</p> <p>Isto \u00e9, envolve-se o termo por um asterisco (<code>*</code>) ou um underline (<code>_</code>).</p>"},{"location":"primeiros-passos/introducao-ao-markdown.html#negrito-e-italico","title":"Negrito e it\u00e1lico\u00b6","text":"<p>Podemos combinar a nota\u00e7\u00e3o de negrito e it\u00e1lico:</p> <pre>Est\u00e1 em _**negrito e it\u00e1lico**_\nIsto tamb\u00e9m est\u00e1 em *__negrito e it\u00e1lico__*\n</pre> <p>Tarefa:</p> <p>Coloque todo texto em negrito e a palavra <code>software</code> em it\u00e1lico.</p> <pre>Engenharia de software \u00e9 uma profiss\u00e3o que tem crescido na \u00faltima d\u00e9cada.\n</pre>"},{"location":"primeiros-passos/introducao-ao-markdown.html#linha-divisoria","title":"Linha divis\u00f3ria\u00b6","text":"<p>Voc\u00ea pode adicionar linhas horizontais para deixar o texto mais organizado e apresent\u00e1vel. Usando tr\u00eas h\u00edfens, tr\u00eas asteriscos ou tr\u00eas underscore:</p> <pre>H\u00edfens\n\n---\n\nAsteriscos\n\n***\n\nUnderscore\n\n___\n</pre>"},{"location":"primeiros-passos/introducao-ao-markdown.html#codigo","title":"C\u00f3digo\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-markdown.html#codigo-em-linha","title":"C\u00f3digo em linha\u00b6","text":"<p>Podemos escrever um trecho de c\u00f3digo em uma frase utilizando o caractere crase.</p> <pre>Para imprimir \"Ol\u00e1 mundo!\" em python utilizamos o \"comando\" `print(\"Ol\u00e1 mundo\")`.\n</pre> <p>Resulta em:</p> <p>Para imprimir \"Ol\u00e1 mundo!\" em python utilizamos o \"comando\" <code>print(\"Ol\u00e1 mundo\")</code>.</p> <p>Observe que o comando \"print(\"Ol\u00e1 mundo\")\" \u00e9 apresentado em um fundo diferente, indicando que \u00e9 um c\u00f3digo.</p>"},{"location":"primeiros-passos/introducao-ao-markdown.html#codigo-multi-linha","title":"C\u00f3digo multi-linha\u00b6","text":"<p>Podemos criar um c\u00f3digo que funciona em mais de uma linha. Para isso vamos utilizar a seguinte nota\u00e7\u00e3o</p> <p>Fizemos acima um c\u00f3digo gen\u00e9rico. Se quisermos especificar a linguagem de programa\u00e7\u00e3o devemos usar:</p> <pre><code>```linguagem\nAqui vai mostrar o c\u00f3digo no modo texto\n\u200b```\n</code></pre> <p>Por exemplo, se considerarmos a linguagem Markdown:</p> <pre><code>```markdown\n&lt;!---\nIsto aqui \u00e9 um coment\u00e1rio multi-linha.\nE esta \u00e9 a segunda linha do coment\u00e1rio\n--&gt;  \nSe eu executar esta c\u00e9lula o comando de **negrito** ir\u00e1 aparecer. \n\u200b```\n</code></pre>"},{"location":"primeiros-passos/introducao-ao-markdown.html#codigo-multi-linha-sem-enfase","title":"C\u00f3digo multi-linha sem \u00eanfase\u00b6","text":"<p>A especifica\u00e7\u00e3o da linguagem permite real\u00e7ar algumas nota\u00e7\u00f5es de sintaxe da linguagem, facilitando a visualiza\u00e7\u00e3o no seu texto final. Por\u00e9m \u00e9 poss\u00edvel criar um bloco de c\u00f3digo multi-linha sem real\u00e7e. Para isso basta n\u00e3o colocar n\u00e3o colocar o nome da linguagem. Como mostra abaixo:</p> <pre><code># Este c\u00f3digo ser\u00e1 apresentado na forma de texto, em Markdown\nling = \"python\"\n\nif ling != \"python\":\n print(\"N\u00e3o \u00e9 uma boa linguagem.\")\nelse:\n print(\"Melhor linguagem.\")\n</code></pre>"},{"location":"primeiros-passos/introducao-ao-markdown.html#citacoes","title":"Cita\u00e7\u00f5es\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-markdown.html#listas","title":"Listas\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-markdown.html#listas-nao-ordenada","title":"Listas n\u00e3o ordenada\u00b6","text":"<p>Para trabalhar com listas n\u00e3o ordenadas podemos utilizar o sinal <code>-</code> ou <code>+</code> antes da frase:</p> <pre>- item 1\n- item 2\n- item 3\n</pre> <p>Resulta em:</p> <ul> <li>item 1</li> <li>item 2</li> <li>item 3</li> </ul> <p>Ou ainda:</p> <pre>+ item 1\n+ item 2\n+ item 3\n</pre>"},{"location":"primeiros-passos/introducao-ao-markdown.html#lista-ordenada","title":"Lista ordenada\u00b6","text":"<p>Veja como faz uma lista ordenada:</p> <pre>**Lista ordenada:**\n1. Elemento 1\n2. Elemento 2\n3. Elemento 3\n</pre> <p>Resulta em:</p> <p>Lista ordenada:</p> <ol> <li>Elemento 1</li> <li>Elemento 2</li> <li>Elemento 3</li> </ol>"},{"location":"primeiros-passos/introducao-ao-markdown.html#lista-dentro-de-lista","title":"Lista dentro de lista\u00b6","text":"<p>Podemos criar uma lista dentro de uma lista adicionando uma endenta\u00e7\u00e3o, como mostra abaixo:</p> <pre>1. item 1\n   - item 1.1\n   - item 1.2\n   - item 1.3\n2. item 2\n   - item 2.1\n   - item 2.2\n   - item 3.3\n3. item 3\n</pre> <p>Resulta em:</p> <ol> <li>item 1</li> </ol> <ul> <li>item 1.1</li> <li>item 1.2</li> <li>item 1.3</li> </ul> <ol> <li>item 2</li> </ol> <ul> <li>item 2.1</li> <li>item 2.2</li> <li>item 3.3</li> </ul> <ol> <li>item 3</li> </ol>"},{"location":"primeiros-passos/introducao-ao-markdown.html#criando-um-cabecalho","title":"Criando um cabe\u00e7alho\u00b6","text":"<p>Utilizando todos os conhecimentos que voc\u00ea aprendeu em Markdown crie um cabe\u00e7alho na primeira c\u00e9lula, logo ap\u00f3s t\u00edtulo principal.</p> <p>Dica:</p> <p>Clique na primeira c\u00e9lula, entre no modo de comando e aperte <code>A</code> de Above.</p> <p>Agora crie o seu cabe\u00e7alho.</p> <p>Dica:</p> <p>N\u00e3o se esque\u00e7a dos dois espa\u00e7os para quebrar a linha.</p> <p>O meu ficou assim:</p> <pre><code>---\n__Nome do(a) aluno(a)__: Lucas Lima  \n__Institui\u00e7\u00e3o__: UFAC  \n---\n</code></pre> <p>Dicas: Se voc\u00ea conhece, voc\u00ea pode usar em HTML e CSS para deixar o seu texto ainda mais rico. Mais informa\u00e7\u00f5es aqui. Evite usar muitos t\u00edtulos no seu cabe\u00e7alho (<code>#</code>,  <code>##</code>, etc) no seu cabe\u00e7alho pois isso pode atrapalhar na gera\u00e7\u00e3o de \u00edndice ao exportar seu Notebook para pdf, LaTeX ou HTML.</p> <p>Ah, n\u00e3o se esque\u00e7a de criar os t\u00edtulos e cabe\u00e7alhos das pr\u00f3ximas atividades \ud83d\ude09</p>"},{"location":"primeiros-passos/introducao-ao-python.html","title":"Introdu\u00e7\u00e3o ao Python","text":"<p>Coment\u00e1rios s\u00e3o trechos de c\u00f3digo que s\u00e3o ignorados pelo interpretador ou compilador durante a execu\u00e7\u00e3o do programa.</p> <p>Eles s\u00e3o usados para explicar o que o c\u00f3digo faz, tornando-o mais f\u00e1cil de entender para outros desenvolvedores (ou para voc\u00ea mesmo no futuro).</p> <p>Para criar um coment\u00e1rio basta usar <code>#</code> no in\u00edcio do coment\u00e1rio. O texto ap\u00f3s o <code>#</code> n\u00e3o ser\u00e1 lido pelo interpretador.</p> <p>Para entender um pouco mais digite em seu notebook o seguinte c\u00f3digo:</p> In\u00a0[\u00a0]: Copied! <pre># aqui vamos refazer o cabe\u00e7alho utilizando vari\u00e1veis\n# ali\u00e1s, voc\u00ea sabe quem sou eu?\n</pre> # aqui vamos refazer o cabe\u00e7alho utilizando vari\u00e1veis # ali\u00e1s, voc\u00ea sabe quem sou eu? <p>No exemplo anterior vimos como criar um coment\u00e1rio com uma \u00faltima linha. Caso queiramos escrever document\u00e1rios com mais de uma linha podemos utilizar a seguinte nota\u00e7\u00e3o:</p> In\u00a0[\u00a0]: Copied! <pre># Este \u00e9 um coment\u00e1rio\n# que se estende por v\u00e1rias\n# linhas.\n</pre> # Este \u00e9 um coment\u00e1rio # que se estende por v\u00e1rias # linhas. <p>Entretanto essa abordagem n\u00e3o \u00e9 muito pr\u00e1tica. Felizmente, \u00e9 poss\u00edvel utilizar a nota\u00e7\u00e3o de aspas triplas (<code>'''</code> ou <code>\"\"\"</code>):</p> In\u00a0[9]: Copied! <pre>'''\nEste \u00e9 um coment\u00e1rio\nque se estende por v\u00e1rias\nlinhas.\n''';\n</pre> ''' Este \u00e9 um coment\u00e1rio que se estende por v\u00e1rias linhas. '''; <p>Tarefa:</p> <p>Agora use sua imagina\u00e7\u00e3o e crie o seu pr\u00f3prio cabe\u00e7alho em utilizando coment\u00e1rios.</p> <p>Dica:</p> <p>Use o coment\u00e1rio multi-linha para criar o seu cabe\u00e7alho.</p> <p>Em Python, podemos escrever express\u00f5es matem\u00e1ticas como em qualquer outra calculadora (Como o MatLab, por exemplo). Express\u00f5es consistem de valores, como <code>2</code> e operadores, como o <code>+</code>.</p> <p>Escreveremos <code>2+2</code> na c\u00e9lula abaixo, e vemos que a express\u00e3o ir\u00e1 assumir o valor final de <code>4</code>.</p> In\u00a0[48]: Copied! <pre>2+2\n</pre> 2+2 Out[48]: <pre>4</pre> <p>Podemos usar diversos operadores para computar diversas express\u00f5es como quisermos, como listado na tabela abaixo.</p> Operador Opera\u00e7\u00e3o Exemplo Resulta em <code>**</code> Expoente <code>2 ** 3</code> <code>8</code> <code>%</code> Resto <code>22 % 8</code> <code>6</code> <code>//</code> Divis\u00e3o inteira <code>22 // 8</code> <code>2</code> <code>/</code> Divis\u00e3o <code>22 / 8</code> <code>2.75</code> <code>*</code> Multiplica\u00e7\u00e3o <code>3 * 5</code> <code>15</code> <code>-</code> Subtra\u00e7\u00e3o <code>5 - 2</code> <code>3</code> <code>+</code> Adi\u00e7\u00e3o <code>2 + 2</code> <code>4</code> <p>A ordem dos operadores da matem\u00e1tica do Python \u00e9 similar \u00e0 usada na matem\u00e1tica comum, ou seja, primeiro as pot\u00eancias (<code>**</code>), depois multiplica\u00e7\u00f5es e divis\u00f5es (<code>*</code> e <code>/</code>) e por fim as somas e subtra\u00e7\u00f5es (<code>+</code> e <code>-</code>), da esquerda para a direita. Podemos tamb\u00e9m usar par\u00eanteses. Agora, vamos tentar calcular o valor de algumas opera\u00e7\u00f5es para exercitar o que foi aprendido.</p> In\u00a0[\u00a0]: Copied! <pre># C\u00e9lula 1\n2+2+3\n</pre> # C\u00e9lula 1 2+2+3 In\u00a0[\u00a0]: Copied! <pre># C\u00e9lula 2\n7-4\n</pre> # C\u00e9lula 2 7-4 In\u00a0[\u00a0]: Copied! <pre># C\u00e9lula 3\n3*9\n</pre> # C\u00e9lula 3 3*9 In\u00a0[\u00a0]: Copied! <pre># C\u00e9lula 4\n23/7\n</pre> # C\u00e9lula 4 23/7 In\u00a0[\u00a0]: Copied! <pre># Considerando a divis\u00e3o normal, /:\n23/7\n</pre> # Considerando a divis\u00e3o normal, /: 23/7 In\u00a0[\u00a0]: Copied! <pre># Considerando a divis\u00e3o de parte inteira, //:\n23//7\n</pre> # Considerando a divis\u00e3o de parte inteira, //: 23//7 <p>Tarefa:</p> <p>Agora tente resolver os c\u00e1lculos abaixo utilizando a divis\u00e3o normal e a divis\u00e3o de parte inteira:</p> <ul> <li>$8\\div 7$</li> <li>$50 \\div 3$</li> </ul> In\u00a0[13]: Copied! <pre>2 ** 5\n</pre> 2 ** 5 Out[13]: <pre>32</pre> <p>O n\u00famero 2 \u00e9 a base e o n\u00famero 5 \u00e9 o exponente.</p> <p>Tarefa:</p> <p>Seguindo esta l\u00f3gica calcule as seguintes express\u00f5es:</p> <ul> <li>$2^5$</li> <li>$2^3$</li> </ul> In\u00a0[14]: Copied! <pre>4**0.5\n</pre> 4**0.5 Out[14]: <pre>2.0</pre> <p>Tarefa:</p> <p>Usando essa mesma l\u00f3gica calcule as seguintes express\u00f5es:</p> <ul> <li>$\\sqrt[4]{256}$</li> <li>$\\sqrt[3]{27}$</li> <li>$\\sqrt{8}$</li> </ul> <p>Dica:</p> <p>Para calcular $\\sqrt[3]{x}$ coloque o expoente (1/3) entre par\u00eanteses. Como mostra abaixo:</p> <pre>x**(1/3)\n</pre> In\u00a0[15]: Copied! <pre>(5-1)*((7+1)/(3-1))\n</pre> (5-1)*((7+1)/(3-1)) Out[15]: <pre>16.0</pre> <p>Assim como na matem\u00e1tica, no Python cada opera\u00e7\u00e3o tem uma prioridade em rela\u00e7\u00e3o \u00e0s outras.</p> <p>Abaixo tem-se a tabela de prioridade dos operadores:</p> Prioridade Operadores Significado 1 <code>()</code> Par\u00eantese 2 <code>**</code> Pot\u00eancia\u00e7\u00e3o 3 <code>*</code>, <code>/</code>, <code>//</code> e <code>%</code> Multiplica\u00e7\u00e3o, divis\u00e3o, divis\u00e3o inteira e resto 4 <code>+</code> e <code>-</code> Soma e subtra\u00e7\u00e3o <p>Tarefa:</p> <p>Tente calcular as seguintes opera\u00e7\u00f5es e observe como se comporta a prioridade dos operadores.</p> <ul> <li>$\\frac{8}{2}\\times (2+2)$</li> <li>$(2+3)\\times 3^3$</li> <li>$7+7\\div 7 + 7 \\times 7 -7$</li> <li>$\\sqrt[3]{4}$</li> <li>$\\sqrt{9^2-4\\times 3}$</li> <li>$\\sqrt[3]{(9^2-4)\\times3}$</li> </ul> In\u00a0[\u00a0]: Copied! <pre>5+\n</pre> 5+ <p>O que aconteceu?</p> <p>Dica:</p> <p>Escreva a resposta em Markdown em uma c\u00e9lula de texto abaixo.</p> <p>Existem diversos tipos de dados em Python que se comportam de diferente formas em express\u00f5es, os tr\u00eas tipos mais b\u00e1sicos s\u00e3o:</p> Tipo de dado Classe Exemplo Inteiro <code>int</code> <code>-2</code>, <code>-1</code>, <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code>, <code>4</code>, <code>5</code> Decimal (Ponto flutuante) <code>float</code> <code>-1.25</code>, <code>-1.0</code>, <code>-0.5</code>, <code>0.0</code>, <code>0.5</code>, <code>1.0</code>, <code>1.25</code> Texto (String) <code>str</code> <code>'a'</code>, <code>'aa'</code>, <code>'aaa'</code>, <code>'Hello!'</code>, <code>'curso de python'</code> <p>Inteiros (<code>int</code>) se refere aos n\u00fameros inteiros, n\u00fameros em ponto flutuante (<code>float</code>) se refere a n\u00fameros com casa decimal e strings (<code>str</code>) s\u00e3o textos.</p> <p>Note que o Python internamente chama inteiros, decimais e texto de <code>int</code>, <code>float</code> ou <code>string</code>.</p> <p>Observa\u00e7\u00e3o:</p> <p>Note que as strings tem sempre aspas simples em suas extremidades como <code>'Isso \u00e9 uma string'</code>.</p> <p>Podemos escrever a string <code>python</code> no modo c\u00f3digo da seguinte forma:</p> In\u00a0[\u00a0]: Copied! <pre>'python'\n</pre> 'python' <pre>'python'</pre> <p>Tarefa:</p> <p>Agora escreva uma string <code>Eu adoro Pizza</code> no modo c\u00f3digo.</p> <p>Usamos o operador <code>+</code> para concatenar (juntar) duas ou mais strings:</p> In\u00a0[\u00a0]: Copied! <pre>\"curso \" + \"de \" + \"Python\"\n</pre> \"curso \" + \"de \" + \"Python\" <pre>'curso de Python'</pre> <p>Tarefa:</p> <p>Agora concatene as seguintes strings para formar uma frase:</p> <ul> <li><code>\"O \"</code></li> <li><code>\"c\u00e9u \"</code></li> <li><code>\"\u00e9 \"</code></li> <li><code>\"Azul\"</code></li> </ul> <p>O Python n\u00e3o consegue concatenar uma string e um n\u00famero. Como por exemplo:</p> In\u00a0[\u00a0]: Copied! <pre>5 + 'abacate'\n</pre> 5 + 'abacate' <pre>\n---------------------------------------------------------------------------\n\nTypeError                                 Traceback (most recent call last)\n\nCell In[19], line 1\n\n----&gt; 1 5 + 'abacate'\n\n\n\nTypeError: unsupported operand type(s) for +: 'int' and 'str'</pre> <p>O operador <code>*</code> permite repetir strings:</p> In\u00a0[\u00a0]: Copied! <pre>'abacaxi ' * 5\n</pre> 'abacaxi ' * 5 <pre>'abacaxi abacaxi abacaxi abacaxi abacaxi '</pre> <p>Tarefa:</p> <p>Utilize operadores de string para gerar a seguinte frase:</p> <p>O c\u00e9u \u00e9 Azul Azul Azul</p> <p>Utilize somente as strings:</p> <ul> <li>\"O \"</li> <li>\"c\u00e9u \"</li> <li>\"\u00e9 \"</li> <li>\"Azul\"</li> </ul> <p>Observe que foi retornado um <code>TypeError</code> (Erro de tipo) indicando que n\u00e3o \u00e9 poss\u00edvel fazer a opera\u00e7\u00e3o <code>+</code> entre o <code>int</code> e <code>str</code>.</p> <p>A a\u00e7\u00e3o de transformar uma vari\u00e1vel de um tipo (<code>int</code>, <code>float</code>  e <code>string</code>) em outro tipo \u00e9 chamada de convers\u00e3o de dados.  Para fazer essa convers\u00e3o podemos utilizar as fun\u00e7\u00f5es <code>str</code>, <code>int</code> e <code>float</code>.</p> Fun\u00e7\u00e3o Descri\u00e7\u00e3o <code>str()</code> Transforma uma vari\u00e1vel em uma string <code>int()</code> Transforma uma vari\u00e1vel em um inteiro <code>float()</code> Transforma uma vari\u00e1vel em um ponto flutuante <p>Tarefa:</p> <p>Agora fa\u00e7a as seguintes convers\u00f5es:</p> <ul> <li><code>0</code> para string</li> <li><code>-3.14</code> para string</li> <li><code>\"-99\"</code> para inteiro</li> <li><code>1.25</code> para inteiro</li> <li><code>1.99</code> para inteiro</li> <li><code>'3.14'</code> para ponto flutuante</li> <li><code>10</code> para inteiro</li> </ul> <p>Na se\u00e7\u00e3o anterior vimos que a opera\u00e7\u00e3o <code>5 + 'abacate'</code>  n\u00e3o \u00e9 permitida no Python, pois n\u00e3o \u00e9 poss\u00edvel concatenar um inteiro com uma string. Por\u00e9m podemos resolver este problema da seguinte forma:</p> In\u00a0[\u00a0]: Copied! <pre>str(5) + ' abacate'\n</pre> str(5) + ' abacate' <pre>'5 abacate'</pre> <p>Tarefa:</p> <p>Corrija a c\u00e9lula abaixo utilizando as fun\u00e7\u00f5es de convers\u00e3o:</p> In\u00a0[\u00a0]: Copied! <pre>'Eu tenho ' + 5 + ' anos de idade.'\n</pre> 'Eu tenho ' + 5 + ' anos de idade.' In\u00a0[\u00a0]: Copied! <pre>type(2.0)\n</pre> type(2.0) <pre>float</pre> In\u00a0[\u00a0]: Copied! <pre>type(\"Especialista em Drone\")\n</pre> type(\"Especialista em Drone\") <pre>str</pre> In\u00a0[\u00a0]: Copied! <pre>type(-5)\n</pre> type(-5) <pre>int</pre> <p>Tarefa:</p> <p>Descubra os tipos das seguintes express\u00f5es:</p> Express\u00f5es <code>0.0</code> <code>123+1.23</code> <code>9%2</code> <code>-3.14</code> <code>7/3</code> <code>-11</code> <code>'-99'</code> <code>7.0j</code> <code>5+10j</code> <p>Vari\u00e1veis funcionam como caixas em que podemos guardar o que quisermos utilizando o operador de atribui\u00e7\u00e3o, <code>=</code>.  Veja os exemplos abaixo:</p> In\u00a0[\u00a0]: Copied! <pre>a = 40\nb = 2\na+b\n</pre> a = 40 b = 2 a+b <pre>42</pre> <p>Tarefa:</p> <p>Repita o exemplo acima considerando tr\u00eas vari\u00e1veis <code>a</code>, <code>b</code> e <code>c</code>. Atribua os valores delas em 5, 10 e 15.</p> In\u00a0[\u00a0]: Copied! <pre>texto_1 = 'Ol\u00e1 '\ntexto_2 = 'Mundo!'\ntexto_final = texto_1 + texto_2\n# Para mostrar o valor da vari\u00e1vel basta escrever a vari\u00e1vel no final da c\u00e9lula\ntexto_final\n</pre> texto_1 = 'Ol\u00e1 ' texto_2 = 'Mundo!' texto_final = texto_1 + texto_2 # Para mostrar o valor da vari\u00e1vel basta escrever a vari\u00e1vel no final da c\u00e9lula texto_final <pre>'Ol\u00e1 Mundo!'</pre> <p>Tarefa:</p> <p>A equa\u00e7\u00e3o de segundo grau tem o seguinte formato:</p> <p>$$ ax^2+bx+c=0 $$</p> <p>Podemos encontrar as duas solu\u00e7\u00f5es, $x_1$ e $x_2$ deste tipo de equa\u00e7\u00e3o com a f\u00f3rmula de Baskara:</p> <p>$$ \\Delta = b^2-4ac $$</p> <p>$$ x_1=\\frac{-b+ \\sqrt{\\Delta}}{2a} $$</p> <p>$$ x_2=\\frac{-b-\\sqrt{\\Delta}}{2a} $$</p> <p>Utilizando o conceito de vari\u00e1veis, crie um programa capaz de resolver uma equa\u00e7\u00e3o de segundo grau com $a=1$, $b=4$ e $c=7$.</p> <p>Considere o exemplo abaixo:</p> <p>C\u00e9lulas 1 e 2:  Primeira atribui\u00e7\u00e3o</p> In\u00a0[\u00a0]: Copied! <pre># C\u00e9lula 1\nmantega = 40\nmantega\n</pre> # C\u00e9lula 1 mantega = 40 mantega <pre>40</pre> In\u00a0[\u00a0]: Copied! <pre># C\u00e9lula 2\novos = 2\novos\n</pre> # C\u00e9lula 2 ovos = 2 ovos <pre>2</pre> <p>As vari\u00e1veis <code>mantega</code> e <code>ovos</code> n\u00e3o existem previamente na mem\u00f3ria. Quando s\u00e3o atribu\u00eddos  valores para elas, o Python cria esta vari\u00e1veis e atribu\u00ed os seus respectivos valores.</p> <p>C\u00e9lulas 3 e 4: Vari\u00e1veis existentes</p> In\u00a0[\u00a0]: Copied! <pre># C\u00e9lula 3\nmantega+ovos\n</pre> # C\u00e9lula 3 mantega+ovos <pre>42</pre> In\u00a0[\u00a0]: Copied! <pre># C\u00e9lula 4\nmantega+ovos+mantega\n</pre> # C\u00e9lula 4 mantega+ovos+mantega <pre>82</pre> <p>Neste caso o Python pesquisa se a j\u00e1 existe vari\u00e1veis na mem\u00f3ria e faz as opera\u00e7\u00f5es considerando estas vari\u00e1veis.</p> <p>C\u00e9lula 5 e 6: Substitui\u00e7\u00e3o dos valores</p> In\u00a0[\u00a0]: Copied! <pre># C\u00e9lula 5\novos = 10\novos\n</pre> # C\u00e9lula 5 ovos = 10 ovos <pre>10</pre> <p>Na c\u00e9lula 5 o valor da vari\u00e1vel <code>ovos</code> foi substuido pelo valor <code>10</code>.</p> In\u00a0[\u00a0]: Copied! <pre># C\u00e9lula 6\nmantega=mantega+2\nmantega\n</pre> # C\u00e9lula 6 mantega=mantega+2 mantega <pre>44</pre> <p>Na c\u00e9lula 6 o valor da vari\u00e1vel <code>mantega</code> foi substuida pela express\u00e3o <code>mantega+2</code>. Observe que foi utilizado o pr\u00f3prio valor armazenado para atualizar a vari\u00e1vel.</p> In\u00a0[\u00a0]: Copied! <pre># C\u00e9lula 1: atribui\u00e7\u00e3o da vari\u00e1vel _\n2\n</pre> # C\u00e9lula 1: atribui\u00e7\u00e3o da vari\u00e1vel _ 2 <pre>2</pre> In\u00a0[\u00a0]: Copied! <pre># C\u00e9lula 2: Some em 3 a vari\u00e1vel _ e salve o resultado nela mesma\n_\n</pre> # C\u00e9lula 2: Some em 3 a vari\u00e1vel _ e salve o resultado nela mesma _ <pre>2</pre> <p>Dica:</p> <p>Para quem tem familiaridade com o MATLAB a vari\u00e1vel <code>_</code> \u00e9 equivalente \u00e0 vari\u00e1vel <code>ans</code>.</p> <p>Tarefa:</p> <p>Execute as c\u00e9lulas na seguinte ordem:</p> <p>C\u00e9lula 1 $\\rightarrow$ C\u00e9lula 2 $\\rightarrow$ C\u00e9lula 2 $\\rightarrow$ C\u00e9lula 2 $\\rightarrow$ C\u00e9lula 1 $\\rightarrow$  C\u00e9lula 2 $\\rightarrow$ C\u00e9lula 1</p> <p>Tarefa:</p> <p>Reinicie o Kernel e adicione a expres\u00e3o <code>print()</code> no final da c\u00e9lula 1 (Abaixo).  Execute a C\u00e9lula 1 e a C\u00e9lula 2. O que aconteceu? Justifique sua Resposta.</p> <p>Tarefa:</p> <p>Escreva e execute as seguintes express\u00f5es:</p> <ul> <li><code>Primeira_variavel=1</code></li> <li><code>1a_variavel=1</code></li> <li><code>Primeira variavel=1</code></li> <li><code>Primeira_vari\u00e1vel=1</code></li> <li><code>\u660e=1</code></li> <li><code>Atribui\u00e7\u00e3o=1</code></li> </ul> <p>Escreva um coment\u00e1rio em Python no topo de cada c\u00e9lula explicando o porqu\u00ea esta sint\u00e1xe funciona ou n\u00e3o funciona.</p> In\u00a0[\u00a0]: Copied! <pre>## Atribui a=2 e b=3\na, b = 2, 3\n\n## Mostra os valores de a e b abaixo da c\u00e9lula\n\"O valor de a \u00e9 \"+str(a)+\" e o valor de b \u00e9 \" +str(b)+\".\"\n</pre> ## Atribui a=2 e b=3 a, b = 2, 3  ## Mostra os valores de a e b abaixo da c\u00e9lula \"O valor de a \u00e9 \"+str(a)+\" e o valor de b \u00e9 \" +str(b)+\".\" <pre>'O valor de a \u00e9 2 e o valor de b \u00e9 3.'</pre> <p>No Python podemos utilizar a atribui\u00e7\u00e3o m\u00faltipla para trocar o valor de duas ou mais vari\u00e1veis sem a necessidade de criar uma outra vari\u00e1vel auxiliar.  Veja e execute o exemplo abaixo:</p> In\u00a0[1]: Copied! <pre># Atribui o valor de a=2 e b=3\na, b = 2, 3\n\n# Troca os valores de a e b\na, b = b, a\n\n## Mostra os valores de a e b abaixo da c\u00e9lula\n\"O valor de a \u00e9 \"+str(a)+\" e o valor de b \u00e9 \" +str(b)+\".\"\n</pre> # Atribui o valor de a=2 e b=3 a, b = 2, 3  # Troca os valores de a e b a, b = b, a  ## Mostra os valores de a e b abaixo da c\u00e9lula \"O valor de a \u00e9 \"+str(a)+\" e o valor de b \u00e9 \" +str(b)+\".\" Out[1]: <pre>'O valor de a \u00e9 3 e o valor de b \u00e9 2.'</pre> <p>Tarefa:</p> <p>Crie um c\u00f3digo capaz de trocar os valores das vari\u00e1veis $a=b$, $b=c$ e $c=a$. Inicialize essas vari\u00e1veis com os valores $a=6$, $b=7$ e $c=10$.</p>"},{"location":"primeiros-passos/introducao-ao-python.html#introducao-ao-python","title":"Introdu\u00e7\u00e3o ao Python\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-python.html#comentarios","title":"Coment\u00e1rios\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-python.html#operadores","title":"Operadores\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-python.html#operacoes-de-somar-subtrair-multiplicar-e-dividir","title":"Opera\u00e7\u00f5es de somar, subtrair, multiplicar e dividir\u00b6","text":"<p>A seguir execute as seguintes opera\u00e7\u00f5es e observe o que acontece:</p>"},{"location":"primeiros-passos/introducao-ao-python.html#divisao-de-parte-inteira","title":"Divis\u00e3o de parte inteira\u00b6","text":"<p>A divis\u00e3o de parte inteira retorna somente a parte inteira de uma divis\u00e3o.</p> <p>Execute as c\u00e9lulas abaixo e veja voc\u00ea mesmo:</p>"},{"location":"primeiros-passos/introducao-ao-python.html#resto","title":"Resto\u00b6","text":"<p>Podemos encontrar o resto de uma divis\u00e3o utilizando o operador <code>%</code>.</p> <p>Tarefa:</p> <p>Agora calcule o resto das seguintes opera\u00e7\u00f5es:</p> <ul> <li>$23\\div 7$</li> <li>$40 \\div 4$</li> <li>$43 \\div 3$</li> </ul>"},{"location":"primeiros-passos/introducao-ao-python.html#potenciacao","title":"Potencia\u00e7\u00e3o\u00b6","text":"<p>O operador <code>**</code> permite calcular opera\u00e7\u00e3o de exponencia\u00e7\u00e3o. No exemplo abaixo:</p>"},{"location":"primeiros-passos/introducao-ao-python.html#raiz","title":"Raiz\u00b6","text":"<p>No Python vanilla (Sem m\u00f3dulos ou extens\u00f5es) n\u00e3o existe a opera\u00e7\u00e3o de raiz. Entretanto podemos reescrever esta opera\u00e7\u00e3o utilizando a opera\u00e7\u00e3o de pot\u00eancia\u00e7\u00e3o com n\u00fameros fracion\u00e1rios ou decimais. Por exemplo, para calcular $\\sqrt{4}$ utilizamos:</p>"},{"location":"primeiros-passos/introducao-ao-python.html#parentese-e-prioridade-de-operadores","title":"Par\u00eantese e prioridade de operadores\u00b6","text":"<p>Assim como na matem\u00e1tica, os par\u00eanteses tem prioridade na execu\u00e7\u00e3o em compara\u00e7\u00e3o \u00e0s outras opera\u00e7\u00f5es. Por exemplo:</p>"},{"location":"primeiros-passos/introducao-ao-python.html#expressao-sem-sentido","title":"Express\u00e3o sem sentido\u00b6","text":"<p>O python n\u00e3o reconhece express\u00f5es que n\u00e3o fazem sentido, como a express\u00e3o abaixo.</p> <p>Tente rodar a seguinte c\u00e9lula e explique o que aconteceu em uma c\u00e9lula em Markdown.</p>"},{"location":"primeiros-passos/introducao-ao-python.html#tipos-de-dados","title":"Tipos de dados\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-python.html#escrevendo-uma-string","title":"Escrevendo uma string\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-python.html#concatenando-strings","title":"Concatenando strings\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-python.html#concatenacao-proibida","title":"Concatena\u00e7\u00e3o proibida\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-python.html#repetindo-strings","title":"Repetindo strings\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-python.html#conversao-de-dados","title":"Convers\u00e3o de dados\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-python.html#concatenando-strings-e-numeros","title":"Concatenando strings e n\u00fameros\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-python.html#a-funcao-type","title":"A fun\u00e7\u00e3o type()\u00b6","text":"<p>A fun\u00e7\u00e3o <code>type()</code> indica o tipo de um determinado dado (ou a classe do dado). Veja os exemplos abaixo:</p>"},{"location":"primeiros-passos/introducao-ao-python.html#variaveis","title":"Vari\u00e1veis\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-python.html#expressoes-em-atribuicoes-de-variaveis","title":"Express\u00f5es em atribui\u00e7\u00f5es de vari\u00e1veis\u00b6","text":"<p>\u00c9 poss\u00edvel criar novas vari\u00e1veis que s\u00e3o resultado de opera\u00e7\u00f5es com outras vari\u00e1veis:</p>"},{"location":"primeiros-passos/introducao-ao-python.html#atribuicao-em-variavel-existente","title":"Atribui\u00e7\u00e3o em vari\u00e1vel existente\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-python.html#variavel-underline","title":"Vari\u00e1vel underline\u00b6","text":"<p>Caso a \u00faltima linha de uma c\u00e9lula for um valor ou uma express\u00e3o. O Jupyter ir\u00e1 imprimir o valor desta express\u00e3o abaixo da c\u00e9lula e armazenar o valor desta expres\u00e3o na vari\u00e1vel <code>_</code>. Vamos verificar isso na pr\u00e1tica. Crie duas c\u00e9lulas:</p>"},{"location":"primeiros-passos/introducao-ao-python.html#nome-das-variaveis","title":"Nome das vari\u00e1veis\u00b6","text":"<p>Os nomes de vari\u00e1veis s\u00f3 podem ser uma palavra, com acentos, com n\u00fameros e underline <code>_</code>. Nomes de vari\u00e1veis n\u00e3o podem come\u00e7ar com n\u00fameros.</p> <p>Observa\u00e7\u00e3o:</p> <p>Diferentemente das outras linguagens \u00e9 poss\u00edvel declarar vari\u00e1veis com acentos, pois o Python 3 usa a codifica\u00e7\u00e3o UTF8 (Vari\u00e1veis como C usam codifica\u00e7\u00e3o ASCII).</p>"},{"location":"primeiros-passos/introducao-ao-python.html#atribuicao-multipla","title":"Atribui\u00e7\u00e3o m\u00faltipla\u00b6","text":""},{"location":"primeiros-passos/introducao-ao-python.html#trocando-o-valor-de-duas-variaveis","title":"Trocando o valor de duas vari\u00e1veis\u00b6","text":""},{"location":"saida-de-dados/formatacao-de-strings.html","title":"Formata\u00e7\u00e3o de strings","text":"<p>Na se\u00e7\u00e3o anterior vimos como formatar imprimir textos simples na tela atrav\u00e9s da fun\u00e7\u00e3o <code>markdown()</code> e da fun\u00e7\u00e3o <code>display()</code>. Nesta se\u00e7\u00e3o aprenderamos os 3 m\u00e9todos de formata\u00e7\u00e3o de strings em Python:</p> <ol> <li>f-strings</li> <li>Operador <code>%</code></li> <li>M\u00e9todo <code>.format()</code></li> </ol> In\u00a0[2]: Copied! <pre>nome = \"Lucas\"\ndia = 19\nm\u00eas = \"abril\"\n'O meu nome \u00e9 {} e minha data de anivers\u00e1rio \u00e9 {} de {}.'.format(nome,dia,m\u00eas)\n</pre> nome = \"Lucas\" dia = 19 m\u00eas = \"abril\" 'O meu nome \u00e9 {} e minha data de anivers\u00e1rio \u00e9 {} de {}.'.format(nome,dia,m\u00eas) Out[2]: <pre>'O meu nome \u00e9 Lucas e minha data de anivers\u00e1rio \u00e9 19 de abril.'</pre> <p>Tarefa:</p> <p>Crie um programa capaz de somar dois n\u00fameros <code>a</code> e <code>b</code> e retorne como sa\u00edda:</p> <p>A soma de [a] e [b] vale [resultado].</p> <p>Utilize o m\u00e9todo <code>.format()</code>.</p> In\u00a0[3]: Copied! <pre>nome = \"Lucas\"\ndia = 19\nm\u00eas = \"abril\"\n#.format(dia,m\u00eas,nome)\n#M\u00e1scara: {0} {1} {2}\nprint('O meu nome \u00e9 {2} e minha data de anivers\u00e1rio \u00e9 {0} de {1}.'.format(dia,m\u00eas,nome))\n</pre> nome = \"Lucas\" dia = 19 m\u00eas = \"abril\" #.format(dia,m\u00eas,nome) #M\u00e1scara: {0} {1} {2} print('O meu nome \u00e9 {2} e minha data de anivers\u00e1rio \u00e9 {0} de {1}.'.format(dia,m\u00eas,nome)) <pre>O meu nome \u00e9 Lucas e minha data de anivers\u00e1rio \u00e9 19 de abril.\n</pre> <p>Ver\u00e1 que mesmo trocando a ordem dos argumentos a sa\u00edda continua a mesma, pois numeramos as m\u00e1scaras e desta forma ficamos livres para escolher qualquer ordem que os argumentos apare\u00e7am.</p> <p>Tarefa:</p> <p>Repita a tarefa do exemplo anterior colocando os par\u00e2metros da seguinte ordem <code>.format(resultado,b,a)</code>. Relembrando:</p> <p>A soma de [a] e [b] vale [resultado].</p> <p>Al\u00e9m de numerar os argumentos, podemos nomear os argumentos tornando muito mais f\u00e1cil utiliza\u00e7\u00e3o do m\u00e9todo <code>.format()</code> com v\u00e1rios argumentos. Para isso basta colocar o nome do argumento dentro da m\u00e1scara (Ex: <code>{peso}</code>) e indicar o par\u00e2metro com este nome (Ex: <code>.format(peso=valor)</code>).</p> <p>Veja o exemplo abaixo:</p> In\u00a0[4]: Copied! <pre>print(\"Este programa resolve uma equa\u00e7\u00e3o de segundo grau do tipo ax\u00b2+bx+c=0\")\na=1\nb=-5\nc=6\ndelta=b**2-4*a*c\nx1=(-b+delta**(1/2))/(2*a)\nx2=(-b-delta**(1/2))/(2*a)\nprint(\"As solu\u00e7\u00f5es da equa\u00e7\u00e3o {a}x\u00b2+{b}x+{c}=0 s\u00e3o: x1={x_1} e x2={x_2}.\".format(a=a,b=b,c=c,x_1=x1,x_2=x2))\n# Exemplos:\n# 1) a=1, b=-10 e c=24 \n# 2) a=2, b=8 e c=-24 \n</pre> print(\"Este programa resolve uma equa\u00e7\u00e3o de segundo grau do tipo ax\u00b2+bx+c=0\") a=1 b=-5 c=6 delta=b**2-4*a*c x1=(-b+delta**(1/2))/(2*a) x2=(-b-delta**(1/2))/(2*a) print(\"As solu\u00e7\u00f5es da equa\u00e7\u00e3o {a}x\u00b2+{b}x+{c}=0 s\u00e3o: x1={x_1} e x2={x_2}.\".format(a=a,b=b,c=c,x_1=x1,x_2=x2)) # Exemplos: # 1) a=1, b=-10 e c=24  # 2) a=2, b=8 e c=-24  <pre>Este programa resolve uma equa\u00e7\u00e3o de segundo grau do tipo ax\u00b2+bx+c=0\nAs solu\u00e7\u00f5es da equa\u00e7\u00e3o 1x\u00b2+-5x+6=0 s\u00e3o: x1=3.0 e x2=2.0.\n</pre> <p>Tarefa:</p> <p>Crie um programa que determine o antecessor e o sucessor de um n\u00famero. A sa\u00edda deve ser:</p> <p>O n\u00famero escolhido foi {n\u00famero}, seu antencessor \u00e9 {antecessor} e seu sucessor \u00e9 {sucessor}.</p> <p>Voc\u00ea deve nomear as m\u00e1scaras.</p> <p>O n\u00famero escolhido \u00e9 [n\u00famero], seu antecessor \u00e9 [antecessor]  e seu sucessor \u00e9 [sucessor].</p> <p>Veja o que acontece ao executar o exemplo anterior considerando <code>a=1</code>,<code>b=2</code>,<code>c=-10</code>.</p> In\u00a0[5]: Copied! <pre>print(\"Este programa resolve uma equa\u00e7\u00e3o de segundo grau do tipo ax\u00b2+bx+c=0\")\na=1\nb=2\nc=-10\ndelta=b**2-4*a*c\nx1=(-b+delta**(1/2))/(2*a)\nx2=(-b-delta**(1/2))/(2*a)\nprint(\"As solu\u00e7\u00f5es da equa\u00e7\u00e3o {a}x\u00b2+{b}x+{c}=0 s\u00e3o: x1={x_1} e x2={x_2}.\".format(a=a,b=b,c=c,x_1=x1,x_2=x2))\n</pre> print(\"Este programa resolve uma equa\u00e7\u00e3o de segundo grau do tipo ax\u00b2+bx+c=0\") a=1 b=2 c=-10 delta=b**2-4*a*c x1=(-b+delta**(1/2))/(2*a) x2=(-b-delta**(1/2))/(2*a) print(\"As solu\u00e7\u00f5es da equa\u00e7\u00e3o {a}x\u00b2+{b}x+{c}=0 s\u00e3o: x1={x_1} e x2={x_2}.\".format(a=a,b=b,c=c,x_1=x1,x_2=x2)) <pre>Este programa resolve uma equa\u00e7\u00e3o de segundo grau do tipo ax\u00b2+bx+c=0\nAs solu\u00e7\u00f5es da equa\u00e7\u00e3o 1x\u00b2+2x+-10=0 s\u00e3o: x1=2.3166247903554 e x2=-4.3166247903554.\n</pre> <p>Observe que a string de <code>x1</code> e <code>x2</code> apresenta muitas casas decimais e isto pode dificultar a leitura. Contudo podemos deixar a sa\u00edda mais bonita atrav\u00e9s do m\u00e9todo <code>.format()</code>.  Na tabela abaixo mostra alguns especificadores:</p> Tipo Significado d Mostra o argumento como um <code>int</code> c Mostra o argumento como caractere (C\u00f3digo unicode) b Mostra o argumento como bin\u00e1rio o Mostra o argumento como octal X Mostra o argumento como hexadecimal f Mostra o argumento como <code>float</code> e Mostra o argumento no formato de nota\u00e7\u00e3o cient\u00edfica g Arredonda o argumento em <code>p</code> n\u00fameros significativos (Valor padr\u00e3o 6 significativos) % Mostra o argumento como porcentagem (Multiplica por 100 e coloca % no final) <p>Por exemplo, podemos modificar a sa\u00edda de <code>x1</code> e <code>x2</code> para arredondar para 6 algoritmos significativos. E mostrar os argumentos <code>a</code>, <code>b</code> e <code>c</code> como float.</p> In\u00a0[6]: Copied! <pre>print(\"Este programa resolve uma equa\u00e7\u00e3o de segundo grau do tipo ax\u00b2+bx+c=0\")\na=1\nb=2\nc=-10\ndelta=b**2-4*a*c\nx1=(-b+delta**(1/2))/(2*a)\nx2=(-b-delta**(1/2))/(2*a)\nprint(\"As solu\u00e7\u00f5es da equa\u00e7\u00e3o {a:f}x\u00b2+{b:f}x+{c:f}=0 s\u00e3o: x1={x_1:g} e x2={x_2:g}\".format(a=a,b=b,c=c,x_1=x1,x_2=x2))\n</pre> print(\"Este programa resolve uma equa\u00e7\u00e3o de segundo grau do tipo ax\u00b2+bx+c=0\") a=1 b=2 c=-10 delta=b**2-4*a*c x1=(-b+delta**(1/2))/(2*a) x2=(-b-delta**(1/2))/(2*a) print(\"As solu\u00e7\u00f5es da equa\u00e7\u00e3o {a:f}x\u00b2+{b:f}x+{c:f}=0 s\u00e3o: x1={x_1:g} e x2={x_2:g}\".format(a=a,b=b,c=c,x_1=x1,x_2=x2)) <pre>Este programa resolve uma equa\u00e7\u00e3o de segundo grau do tipo ax\u00b2+bx+c=0\nAs solu\u00e7\u00f5es da equa\u00e7\u00e3o 1.000000x\u00b2+2.000000x+-10.000000=0 s\u00e3o: x1=2.31662 e x2=-4.31662\n</pre> <p>Observe que a sintaxe de formata\u00e7\u00e3o de string \u00e9 independente da sintaxe de numera\u00e7\u00e3o ou nomea\u00e7\u00e3o. Veja o mesmo exemplo anterior sem essa sintaxe:</p> In\u00a0[8]: Copied! <pre>print(\"Este programa resolve uma equa\u00e7\u00e3o de segundo grau do tipo ax\u00b2+bx+c=0\")\na, b, c = 1, 3, -10\ndelta=b**2-4*a*c\nx1=(-b+delta**(1/2))/(2*a)\nx2=(-b-delta**(1/2))/(2*a)\nprint(\"As solu\u00e7\u00f5es da equa\u00e7\u00e3o {:f}x\u00b2+{:f}x+{:f}=0 s\u00e3o: x1={:g} e x2={:g}\".format(a,b,c,x1,x2))\n</pre> print(\"Este programa resolve uma equa\u00e7\u00e3o de segundo grau do tipo ax\u00b2+bx+c=0\") a, b, c = 1, 3, -10 delta=b**2-4*a*c x1=(-b+delta**(1/2))/(2*a) x2=(-b-delta**(1/2))/(2*a) print(\"As solu\u00e7\u00f5es da equa\u00e7\u00e3o {:f}x\u00b2+{:f}x+{:f}=0 s\u00e3o: x1={:g} e x2={:g}\".format(a,b,c,x1,x2)) <pre>Este programa resolve uma equa\u00e7\u00e3o de segundo grau do tipo ax\u00b2+bx+c=0\nAs solu\u00e7\u00f5es da equa\u00e7\u00e3o 1.000000x\u00b2+3.000000x+-10.000000=0 s\u00e3o: x1=2 e x2=-5\n</pre> <p>Veja mais um exemplo:</p> In\u00a0[9]: Copied! <pre>#C\u00f3digo do emoji em decimal\nc\u00f3digo=int('1F602',16) #Fun\u00e7\u00e3o converte uma string hexadecimal em um inteiro\n\n# Mostra o c\u00f3digo em hexadecimal e o emoji resultante\nprint(\"O c\u00f3digo unicode em hexadecimal '{0:X}' resulta no caractere {0:c}.\".format(c\u00f3digo))\n</pre> #C\u00f3digo do emoji em decimal c\u00f3digo=int('1F602',16) #Fun\u00e7\u00e3o converte uma string hexadecimal em um inteiro  # Mostra o c\u00f3digo em hexadecimal e o emoji resultante print(\"O c\u00f3digo unicode em hexadecimal '{0:X}' resulta no caractere {0:c}.\".format(c\u00f3digo)) <pre>O c\u00f3digo unicode em hexadecimal '1F602' resulta no caractere \ud83d\ude02.\n</pre> <p>Tarefa:</p> <p>Crie um programa capaz de analisar um c\u00f3digo hexadecimal digitado pelo usu\u00e1rio e mostrar os seguintes dados:</p> <ul> <li>Valor em decimal do c\u00f3digo</li> <li>Valor em bin\u00e1rio do c\u00f3digo</li> <li>Valor em octal do c\u00f3digo</li> <li>Caractere equivalente</li> </ul> <p>A sa\u00edda do programa deve ser:</p> <p>Analisando o c\u00f3digo '[hexadecimal]'...</p> <p>DEC: [decimal] | BIN: [bin\u00e1rio] |OCT: [octal] | Caractere: [Caractere]</p> <p>Teste os seguintes valores</p> <ul> <li>2702</li> <li>26BD</li> <li>1F64C</li> <li>0041</li> <li>0169</li> </ul> In\u00a0[10]: Copied! <pre>print(\"{:d}\".format(12))\n# Inteiro com largura m\u00ednima (5 d\u00edgitos)\nprint(\"{:5d}\".format(12))\n# Preenchendo com zeros\nprint(\"{:05d}\".format(12))\n# Preenchendo com \"underlines\"\nprint(\"{:_&gt;5d}\".format(12)) #Neste caso deve-se usar o alinhamento\n</pre> print(\"{:d}\".format(12)) # Inteiro com largura m\u00ednima (5 d\u00edgitos) print(\"{:5d}\".format(12)) # Preenchendo com zeros print(\"{:05d}\".format(12)) # Preenchendo com \"underlines\" print(\"{:_&gt;5d}\".format(12)) #Neste caso deve-se usar o alinhamento <pre>12\n   12\n00012\n___12\n</pre> <p>O campo de <code>precis\u00e3o</code> varia de acordo com o tipo de dado. Mas de uma forma geral ele determina o n\u00famero m\u00e1ximo de d\u00edgitos de um n\u00famero.</p> <ul> <li>No tipo <code>f</code> precis\u00e3o determina o n\u00famero de casas decimais</li> <li>No tipo <code>g</code>  precis\u00e3o determina o n\u00famero total de d\u00edgitos.</li> </ul> <p>Observa\u00e7\u00e3o:</p> <p>Tanto o tipo <code>g</code> vem de \"Geral\", portanto, dependendo da precis\u00e3o ele pode mostrar o n\u00famero como inteiro como decimal ou em nota\u00e7\u00e3o cient\u00edfica (Equivalente ao tipo <code>e</code>).</p> <p>Veja o exemplo abaixo:</p> In\u00a0[12]: Copied! <pre># O n\u00famero tem largura m\u00ednima de 8 espa\u00e7os (incluindo o ponto)\n# E 3 casas decimais de \"precis\u00e3o\" \n# Neste caso h\u00e1 um arredondamento\nprint(\"{:8.3f}\".format(12.2346)) \nprint(\"{:08.3f}\".format(12.2346)) #Preenchendo com '0'\n</pre> # O n\u00famero tem largura m\u00ednima de 8 espa\u00e7os (incluindo o ponto) # E 3 casas decimais de \"precis\u00e3o\"  # Neste caso h\u00e1 um arredondamento print(\"{:8.3f}\".format(12.2346))  print(\"{:08.3f}\".format(12.2346)) #Preenchendo com '0' <pre>  12.235\n0012.235\n</pre> <p>Tarefa:</p> <p>Modifique o exemplo acima para mostrar todos os d\u00edgitos, sem arredondamentos.</p> <p>Tarefa:</p> <p>Modifique o exemplo acima utilizando o tipo <code>g</code>. Explique o que aconteceu.</p> In\u00a0[13]: Copied! <pre># Mostre o sinal +\nprint(\"Mostre o sinal '+'\")\nprint(\"{:+6.2f} | {:+6.2f}\".format(12.23, -12.23))\nprint(\"{:+6.5g} | {:+6.5g}\".format(12.23, -12.23))\n\n# Mostre apenas o sinal -\nprint(\"Mostre apenas o sinal '-'\")\nprint(\"{:-6.2f} | {:-6.2f}\".format(12.23, -12.23))\nprint(\"{:-6.5g} | {:-6.5g}\".format(12.23, -12.23))\n</pre> # Mostre o sinal + print(\"Mostre o sinal '+'\") print(\"{:+6.2f} | {:+6.2f}\".format(12.23, -12.23)) print(\"{:+6.5g} | {:+6.5g}\".format(12.23, -12.23))  # Mostre apenas o sinal - print(\"Mostre apenas o sinal '-'\") print(\"{:-6.2f} | {:-6.2f}\".format(12.23, -12.23)) print(\"{:-6.5g} | {:-6.5g}\".format(12.23, -12.23)) <pre>Mostre o sinal '+'\n+12.23 | -12.23\n+12.23 | -12.23\nMostre apenas o sinal '-'\n 12.23 | -12.23\n 12.23 | -12.23\n</pre> <ol> <li>Customiza\u00e7\u00e3o em rela\u00e7\u00e3o ao alinhamento:</li> </ol> In\u00a0[14]: Copied! <pre># Inteiro com alinhamento \u00e0 direita\nprint(\"{:5d}\".format(12))\n\n# Ponto flutuante com alinhamento ao centro\nprint(\"{:^10.3f}\".format(12.2346))\n\n# Inteiro preenchido com underline com alinhamento \u00e0 esquerda\nprint(\"{:*&lt;5d}\".format(12))\n\n# Inteiro preenchido com 0 com alinhamento \u00e0 direita\nprint(\"{:0&gt;5d}\".format(12))\nprint(\"{:05d}\".format(12))\n</pre> # Inteiro com alinhamento \u00e0 direita print(\"{:5d}\".format(12))  # Ponto flutuante com alinhamento ao centro print(\"{:^10.3f}\".format(12.2346))  # Inteiro preenchido com underline com alinhamento \u00e0 esquerda print(\"{:*&lt;5d}\".format(12))  # Inteiro preenchido com 0 com alinhamento \u00e0 direita print(\"{:0&gt;5d}\".format(12)) print(\"{:05d}\".format(12)) <pre>   12\n  12.235  \n12***\n00012\n00012\n</pre> <ol> <li>Aplica\u00e7\u00e3o em strings</li> </ol> In\u00a0[15]: Copied! <pre># Preenchendo o espa\u00e7o vazio com ___\nprint(\"Formatando o n\u00famero \u00e1 direita:\")\nprint(\"A palavra \u00e9:'{:_&gt;8}'\".format('Casa'))\nprint(\"Formatando o n\u00famero \u00e1 esquerda:\")\nprint(\"O palavra \u00e9: '{:_&lt;8}\".format('Casa'))\nprint(\"Formatando o n\u00famero no centro:\")\nprint(\"O palavra \u00e9: '{:_^8}\".format('Casa'))\n</pre> # Preenchendo o espa\u00e7o vazio com ___ print(\"Formatando o n\u00famero \u00e1 direita:\") print(\"A palavra \u00e9:'{:_&gt;8}'\".format('Casa')) print(\"Formatando o n\u00famero \u00e1 esquerda:\") print(\"O palavra \u00e9: '{:_&lt;8}\".format('Casa')) print(\"Formatando o n\u00famero no centro:\") print(\"O palavra \u00e9: '{:_^8}\".format('Casa')) <pre>Formatando o n\u00famero \u00e1 direita:\nA palavra \u00e9:'____Casa'\nFormatando o n\u00famero \u00e1 esquerda:\nO palavra \u00e9: 'Casa____\nFormatando o n\u00famero no centro:\nO palavra \u00e9: '__Casa__\n</pre> <p>Al\u00e9m dessa customiza\u00e7\u00e3o existem muitas outras. Para se aprofundar um pouco mais voc\u00ea pode ler aqui.</p> In\u00a0[16]: Copied! <pre>nome = \"Lucas\"\ndia = 19\nm\u00eas = \"abril\"\n\nprint(f'O meu nome \u00e9 {nome} e minha data de anivers\u00e1rio \u00e9 {dia} de {m\u00eas}.')\n</pre> nome = \"Lucas\" dia = 19 m\u00eas = \"abril\"  print(f'O meu nome \u00e9 {nome} e minha data de anivers\u00e1rio \u00e9 {dia} de {m\u00eas}.') <pre>O meu nome \u00e9 Lucas e minha data de anivers\u00e1rio \u00e9 19 de abril.\n</pre> In\u00a0[17]: Copied! <pre>num = 10\n\nprint(f\"O quadrado de {num} \u00e9 {num ** 2}.\")\n</pre> num = 10  print(f\"O quadrado de {num} \u00e9 {num ** 2}.\") <pre>O quadrado de 10 \u00e9 100.\n</pre> In\u00a0[\u00a0]: Copied! <pre>pi = 3.14159265\n\nprint(f\"Valor de pi: {pi:.2f}\")\n</pre> pi = 3.14159265  print(f\"Valor de pi: {pi:.2f}\") <pre>Valor de pi: 3.14\n</pre> <p>Tarefa:</p> <p>Refa\u00e7a o exemplo abaixo feito com o m\u00e9todo format usando f-strings:</p> <pre>print(\"Este programa resolve uma equa\u00e7\u00e3o de segundo grau do tipo ax\u00b2+bx+c=0\")\na=1\nb=3.4\nc=-10\ndelta=b**2-4*a*c\nx1=(-b+delta**(1/2))/(2*a)\nx2=(-b-delta**(1/2))/(2*a)\nprint(\"As solu\u00e7\u00f5es da equa\u00e7\u00e3o {a:g}x\u00b2+{b:g}x+{c:g}=0 s\u00e3o: x1={x_1:.4f} e x2={x_2:.4f}\".format(a=a,b=b,c=c,x_1=x1,x_2=x2))\n</pre> <p>Al\u00e9m do prefixo <code>f</code>, existem tamb\u00e9m <code>r</code> e <code>b</code>. Veja o resumo de todas elas:</p> Prefixo Nome Significado <code>r</code> Raw string N\u00e3o interpreta sequ\u00eancias de escape (<code>\\n</code>, <code>\\t</code>, etc) <code>b</code> Byte strings Sequ\u00eancias de bytes (valores bin\u00e1rios) <code>f</code> f-strings String formatada que permite express\u00f5es embutidas <p>Por exemplo, raw strings interpreta caracteres especiais como <code>\\n</code>, <code>\\t</code>, tornando \u00fatil quando utiliza-se muitas <code>\\</code>, como express\u00f5es em MathJax (ou LaTeX):</p> In\u00a0[20]: Copied! <pre>r'x_{1,2}=\\frac{-b\\pm\\sqrt{b^2-4ac}}{2a}'\n</pre> r'x_{1,2}=\\frac{-b\\pm\\sqrt{b^2-4ac}}{2a}' Out[20]: <pre>'x_{1,2}=\\\\frac{-b\\\\pm\\\\sqrt{b^2-4ac}}{2a}'</pre> <p>Tarefa:</p> <p>Crie uma string que represente o seguinte endere\u00e7o de arquivo no Windows:</p> <pre><code>C:\\novo\\teste\\arquivo.txt\n</code></pre> <p>Use raw strings para obter esse resultado.</p> <p>Tarefa:</p> <p>Como seria para imprimir a f\u00f3rmula de B\u00e1skara sem raw strings?</p> In\u00a0[23]: Copied! <pre>nome = \"Lucas\"\nprint(rf\"C:\\Users\\{nome}\\pasta\")\n</pre> nome = \"Lucas\" print(rf\"C:\\Users\\{nome}\\pasta\") <pre>C:\\Users\\Lucas\\pasta\n</pre> In\u00a0[\u00a0]: Copied! <pre># Exemplo com operador %\nproduto = \"Caneta\"\npreco = 4.5999\nprint(\"Produto: %s | Pre\u00e7o: R$ %.2f\" % (produto, preco))\n</pre> # Exemplo com operador % produto = \"Caneta\" preco = 4.5999 print(\"Produto: %s | Pre\u00e7o: R$ %.2f\" % (produto, preco)) <pre>Produto: Caneta | Pre\u00e7o: R$ 4.60\n</pre> <p>Agora outro exemplo de uma fra\u00e7\u00e3o escrita em MathJax:</p> In\u00a0[\u00a0]: Copied! <pre>a = 2\nb = 5\n\nprint(r\"\\frac{%d}{%d}\" % (a, b))\n</pre> a = 2 b = 5  print(r\"\\frac{%d}{%d}\" % (a, b)) <pre>\\frac{2}{5}\n</pre> <pre>\nThe Kernel crashed while executing code in the current cell or a previous cell. \n\nPlease review the code in the cell(s) to identify a possible cause of the failure. \n\nClick &lt;a href='https://aka.ms/vscodeJupyterKernelCrash'&gt;here&lt;/a&gt; for more info. \n\nView Jupyter &lt;a href='command:jupyter.viewOutput'&gt;log&lt;/a&gt; for further details.</pre> <p>Tarefa:</p> <p>Imprima a f\u00f3rmula do $\\Delta$ na f\u00f3mula de B\u00e1skara em MathJax:</p> <pre><code>\\delta=b^2-4ac\n</code></pre> <p>Use raw strings e o operador <code>%</code> para isso.</p>"},{"location":"saida-de-dados/formatacao-de-strings.html#formatacao-de-strings","title":"Formata\u00e7\u00e3o de strings\u00b6","text":""},{"location":"saida-de-dados/formatacao-de-strings.html#metodo-format","title":"M\u00e9todo format\u00b6","text":"<p>M\u00e9todos s\u00e3o fun\u00e7\u00f5es aplicadas \u00e0 um determinado dado que pertence \u00e0 uma determinada classe de dados.</p> <p>Observa\u00e7\u00e3o:</p> <p>O \"dado\" citado \u00e9 tamb\u00e9m chamado de objeto. Classes e objetos s\u00e3o conceitos abstratos da programa\u00e7\u00e3o orientada a objeto. N\u00e3o chegaremos \u00e0 abordar com detalhes a programa\u00e7\u00e3o orientada \u00e0 objeto, mas como o Python \u00e9 uma linguagem orientada \u00e0 objeto, teremos que trabalhar com alguns conceitos dessa abordagem de programa\u00e7\u00e3o.</p> <p>Voc\u00ea pode pensar que tudo que eu falei \u00e9 complicado, contudo tudo vai ficar mais claro com exemplos. Considere o seguinte exemplo:</p> <p>O meu nome \u00e9 [nome] e minha data de anivers\u00e1rio \u00e9 [dia] de [m\u00eas].</p> <p>Com o m\u00e9todo <code>.format()</code>  podemos reescrever o exemplo da seguinte forma:</p>"},{"location":"saida-de-dados/formatacao-de-strings.html#numerando-os-argumentos","title":"Numerando os argumentos\u00b6","text":"<p>Podemos especificar manualmente a ordem em que os argumentos devem ser impressos, para isto basta colocar a ordem dentro da numera\u00e7\u00e3o da m\u00e1scara  <code>{}</code>. Tente executar o exemplo abaixo:</p>"},{"location":"saida-de-dados/formatacao-de-strings.html#nomeando-argumentos","title":"Nomeando argumentos\u00b6","text":""},{"location":"saida-de-dados/formatacao-de-strings.html#formatando-a-saida","title":"Formatando a sa\u00edda\u00b6","text":""},{"location":"saida-de-dados/formatacao-de-strings.html#customizacao-avancada","title":"Customiza\u00e7\u00e3o avan\u00e7ada\u00b6","text":"<p>Al\u00e9m dos especificadores de tipo \u00e9 poss\u00edvel customizar uma s\u00e9rie de outros detalhes na sa\u00edda do argumento.  Veja a estrutura base:</p> <p>:[preencher][alinhar][sinal][largura][precis\u00e3o][tipo]</p> Campo Fun\u00e7\u00e3o $\\rightarrow$Nota\u00e7\u00e3o preencher Preenche com o caractere escolhido (<code>0</code> no caso de n\u00fameros) alinhar <code>&lt;</code> $\\rightarrow$ esquerda<code>&gt;</code> $\\rightarrow$ direita<code>^</code> $\\rightarrow$ centro sinal <code>+</code> $\\rightarrow$ Sinal para positivo e negativo<code>-</code> $\\rightarrow$ Sinal apenas em negativos largura Largura m\u00ednima do campo (Um n\u00famero) precis\u00e3o Largura m\u00e1xima do campo (Deve ser iniciada com o <code>.</code>) tipo Especificador citado anteriormente"},{"location":"saida-de-dados/formatacao-de-strings.html#largura-minima","title":"Largura m\u00ednima\u00b6","text":"<p>O campo de <code>largura</code>  define a largura m\u00ednima do argumento (incluindo o ponto decimal). Veja o exemplo abaixo:</p>"},{"location":"saida-de-dados/formatacao-de-strings.html#precisao","title":"Precis\u00e3o\u00b6","text":""},{"location":"saida-de-dados/formatacao-de-strings.html#outras-customizacoes","title":"Outras customiza\u00e7\u00f5es\u00b6","text":"<p>Podemos fazer outras customiza\u00e7\u00f5es utilizando o m\u00e9todo <code>.format()</code> Como:</p> <ol> <li>Customiza\u00e7\u00e3o em rela\u00e7\u00e3o ao sinal:</li> </ol>"},{"location":"saida-de-dados/formatacao-de-strings.html#f-strings","title":"F-strings\u00b6","text":"<p>F-strings (formatted string literals) s\u00e3o a forma moderna de formatar strings em Python. Introduzidas na vers\u00e3o Python 3.6, permitem inserir express\u00f5es diretamente dentro das strings, simplificando a constru\u00e7\u00e3o de textos que combinam vari\u00e1veis e express\u00f5es.</p> <p>A sintaxe geral \u00e9 colocar um f ou F antes da abertura das aspas:</p>"},{"location":"saida-de-dados/formatacao-de-strings.html#expressoes-embutidas","title":"Express\u00f5es embutidas\u00b6","text":"<p>F-strings aceitam qualquer express\u00e3o v\u00e1lida de Python, incluindo opera\u00e7\u00f5es matem\u00e1ticas, chamadas de fun\u00e7\u00e3o, m\u00e9todos de objetos, etc.</p> <p>Veja o exemplo abaixo:</p>"},{"location":"saida-de-dados/formatacao-de-strings.html#especificacao-de-formato","title":"Especifica\u00e7\u00e3o de formato\u00b6","text":"<p>Todas as especifica\u00e7\u00f5es de formato do m\u00e9todo format est\u00e3o dispon\u00edveis para as f-strings:</p>"},{"location":"saida-de-dados/formatacao-de-strings.html#prefixos-literais-de-strings","title":"Prefixos literais de strings\u00b6","text":""},{"location":"saida-de-dados/formatacao-de-strings.html#combinando-prefixos","title":"Combinando prefixos\u00b6","text":"<p>Voc\u00ea pode combinar prefixos quando necess\u00e1rio (Prefixo <code>rf</code> ou <code>fr</code>):</p>"},{"location":"saida-de-dados/formatacao-de-strings.html#operador","title":"Operador %\u00b6","text":"<p>O m\u00e9todo de formata\u00e7\u00e3o usando %, tamb\u00e9m chamado de formata\u00e7\u00e3o estilo printf, \u00e9 uma forma mais antiga (oriunda da linguagem C) para inserir valores em uma string.</p> <p>N\u00e3o iremos entrar em tantos detalhes pois esta forma \u00e9 pouco usada, mas pode ser \u00fatil em express\u00f5es escritas em MathJax pois tem muitos <code>{</code> ou <code>}</code>.</p> <p>Veja um exemplo:</p>"},{"location":"saida-de-dados/markdown-rico.html","title":"Textos ricos em Markdown","text":"<p>No cap\u00edtulo anterior aprendemos como criar textos em Markdown. Agora voc\u00ea aprender\u00e1 como inserir elementos mais avan\u00e7ados como:</p> <ul> <li>Equa\u00e7\u00f5es matem\u00e1ticas</li> <li>Tabelas</li> <li>Links</li> <li>Imagens</li> <li>Lista de tarefas</li> </ul> <p>Tarefa:</p> <p>Escreva a lei de Newton de forma destacada e logo abaixo escreva um texto indicando o que significa cada termo usando equa\u00e7\u00f5es inline.</p>"},{"location":"saida-de-dados/markdown-rico.html#textos-ricos-em-markdown","title":"Textos ricos em Markdown\u00b6","text":""},{"location":"saida-de-dados/markdown-rico.html#equacoes-matematicas","title":"Equa\u00e7\u00f5es matem\u00e1ticas\u00b6","text":"<p>Markdown suporta equa\u00e7\u00f5es matem\u00e1ticas usando o MathJax. MathJax \u00e9 uma biblioteca escrita em JavaScript que permite a escrita de equa\u00e7\u00f5es nos navegadores e em Markdown.</p>"},{"location":"saida-de-dados/markdown-rico.html#mathjax","title":"MathJax\u00b6","text":"<p>Esta biblioteca tem uma sintaxe muito similar ao LaTeX. Esta \u00faltima \u00e9 uma linguagem de marca\u00e7\u00e3o de texto muito utilizada na produ\u00e7\u00e3o de textos acad\u00eamicos.</p> <p>Como \u00e9 poss\u00edvel ver MathJax n\u00e3o \u00e9 exatamente LaTeX, mas segue uma sintaxe muito parecida. Sobre as diferen\u00e7as e limita\u00e7\u00f5es, \u00e9 poss\u00edvel encontr\u00e1-las na documenta\u00e7\u00e3o do MathJax, dispon\u00edvel abaixo:</p> <p>https://docs.mathjax.org/en/latest/input/tex/differences.html</p> <p>E ainda, todos os comandos do MathJax tamb\u00e9m est\u00e3o dispon\u00edveis na documenta\u00e7\u00e3o:</p> <p>https://docs.mathjax.org/en/latest/input/tex/macros/index.html</p> <p>Voc\u00ea pode us\u00e1-la para buscar os comandos, se necess\u00e1rio.</p>"},{"location":"saida-de-dados/markdown-rico.html","title":"\u00b6","text":""},{"location":"saida-de-dados/markdown-rico.html#sites-uteis","title":"Sites \u00fateis\u00b6","text":"<p>Caso n\u00e3o tenha familiaridade com o LaTeX \u00e9 poss\u00edvel usar alguns sites que pode te ajudar a escrever as equa\u00e7\u00f5es. S\u00e3o eles:</p> <ol> <li>MathJax Cheat Sheet</li> </ol> <p>https://jojozhuang.github.io/tutorial/mathjax-cheat-sheet-for-mathematical-notation/</p> <p>Mostra os comandos b\u00e1sicos para a escrita de equa\u00e7\u00f5es em LaTeX e MathJax</p> <ol> <li>Online LaTeX Equation Editor</li> </ol> <p>https://latexeditor.lagrida.com/</p> <p>Site onde \u00e9 poss\u00edvel escrever equa\u00e7\u00f5es em LaTeX de forma gr\u00e1fica.</p>"},{"location":"saida-de-dados/markdown-rico.html#equacoes-inline-em-linha","title":"Equa\u00e7\u00f5es inline (Em linha)\u00b6","text":"<p>Equa\u00e7\u00f5es inline s\u00e3o inseridas diretamente no texto. Para isso, use $ ao redor da equa\u00e7\u00e3o:</p> <pre>A equa\u00e7\u00e3o de Einstein \u00e9 $E = mc^2$, onde:\n\n- $E$: energia;\n- $m$: massa;\n- $c$: velocidade da luz.\n</pre> <p>Produz:</p> <p>A equa\u00e7\u00e3o de Einstein \u00e9 $E = mc^2$, onde:</p> <ul> <li>$E$: energia;</li> <li>$m$: massa;</li> <li>$c$: velocidade da luz.</li> </ul> <p>Tarefa:</p> <p>Escreva algum texto utilize a nota\u00e7\u00e3o inline do MathJax. Caso n\u00e3o se recorde, utilize como base o exemplo abaixo:</p> <p>A f\u00f3rmula da \u00e1rea de um c\u00edrculo \u00e9 dada por $A = \\pi r^2$, sendo $A$ a \u00e1rea e $r$ o raio do c\u00edrculo.</p> <p>Dica:</p> <p>Caso n\u00e3o tenha familiaridade com o LaTeX, pode usar os sites indicados anteriormente.</p>"},{"location":"saida-de-dados/markdown-rico.html#equacoes-destacadas","title":"Equa\u00e7\u00f5es destacadas\u00b6","text":"<p>Equa\u00e7\u00f5es destacadas s\u00e3o dispostas de forma centralizadas. Para inser\u00ed-las utilize <code>$$</code> para delimit\u00e1-las: <code>markdown A equa\u00e7\u00e3o quadr\u00e1tica \u00e9 dada por:  $$ x = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} $$ </code> Tarefa: Escreva de forma destacada a defini\u00e7\u00e3o de derivada de uma fun\u00e7\u00e3o $f(t)$ usando o conceito de limite. Caso n\u00e3o lembre segue abaixo: $$ \\frac{df}{dt}=\\lim_{h\\rightarrow}\\frac{f(t+h)-f(t)}{h} $$</p>"},{"location":"saida-de-dados/markdown-rico.html#tabelas","title":"Tabelas\u00b6","text":"<p>Em Markdown, voc\u00ea pode criar tabelas organizadas facilmente.</p> <ol> <li>Cabe\u00e7alho: Usa-se tr\u00eas ou mais h\u00edfens (<code>---</code>)</li> </ol> <pre>| Nome  | Idade | Cidade     |\n|-------|-------|------------|\n| Omar  | 22    | Puno       |\n| Lucas | 20    | Salvador   |\n| Ian   | 25    | Rio Branco |\n</pre> <p>Resultando em:</p> Nome Idade Cidade Omar 22 Puno Lucas 20 Salvador Ian 25 Rio Branco <p>As larguras das c\u00e9lulas podem variar, como mostrado abaixo.</p> <pre>| Nome | Idade | Cidade |\n|---|---|---|\n| Omar | 22 | Puno |\n| Lucas | 20 | Salvador |\n| Ian | 25 | Rio Branco |\n</pre> <p>A sa\u00edda renderizada ter\u00e1 a mesma apar\u00eancia:</p> Nome Idade Cidade Omar 22 Puno Lucas 20 Salvador Ian 25 Rio Branco <p>Tarefa:</p> <p>Crie uma tabela que mostra a cor favorita de cada pessoa:</p> <ul> <li>Jo\u00e3o - Azul</li> <li>Pedro - Verde</li> <li>Maria - Rosa</li> </ul>"},{"location":"saida-de-dados/markdown-rico.html#sites-uteis","title":"Sites \u00fateis\u00b6","text":"<p>Criar tabelas com hifens e barras verticais pode ser tedioso. Para acelerar o processo, existe um site que permite criar tabelas usando interface gr\u00e1fica:</p> <p>Markdown Tables Generator</p> <p>Tarefa:</p> <p>Tente usar o Markdown Tables Generator. Crie uma tabela usando a interface gr\u00e1fica e, em seguida, copie o texto gerado no formato Markdown para o seu arquivo. Caso n\u00e3o tenha uma tabela em mente pode usar qualquer exemplo anterior.</p>"},{"location":"saida-de-dados/markdown-rico.html#alinhamento","title":"Alinhamento\u00b6","text":"<p>Voc\u00ea pode alinhar o texto nas colunas \u00e0 esquerda, \u00e0 direita ou ao centro adicionando dois pontos ( :) \u00e0 esquerda, \u00e0 direita ou em ambos os lados dos hifens dentro da linha de cabe\u00e7alho.</p> <pre>| Mat\u00edcula |  Aluno  | Nota |\n| :------- | :-----: | ---: |\n| 123      | Isabele |  9,5 |\n| 456      |  Pedro  |  7,2 |\n</pre> <p>Dica:</p> <p>Voc\u00ea pode configurar o alinhamento com o Markdown Tables Generator.</p> <p>Tarefa:</p> <p>Refa\u00e7a a tabela:</p> <ul> <li>Jo\u00e3o - Azul</li> <li>Pedro - Verde</li> <li>Maria - Rosa</li> </ul> <p>Onde os nomes devem est\u00e1 alinhados a esquerda e a cor deve est\u00e1 alinhada a direita.</p>"},{"location":"saida-de-dados/markdown-rico.html#formatando-textos-em-tabelas","title":"Formatando textos em tabelas\u00b6","text":"<p>Voc\u00ea pode formatar o texto dentro de tabelas. Por exemplo, voc\u00ea pode adicionar c\u00f3digo, link e \u00eanfase.</p> <p>Tarefa:</p> <p>Fa\u00e7a uma tabela que mostra o c\u00f3digo de sintaxe em Markdown e o resultado.</p>"},{"location":"saida-de-dados/markdown-rico.html#links","title":"Links\u00b6","text":"<p>Para criar um link, coloque o texto do link entre colchetes (por exemplo, [Site do Pudim]) e, em seguida, coloque imediatamente o URL entre par\u00eanteses (por exemplo, (https://www.pudim.com.br/)).</p> <pre>Acesse o site do [Pudim](https://www.pudim.com.br/).\n</pre> <p>Resulta em:</p> <p>Acesse o site do Pudim.</p> <p>Tarefa:</p> <p>Escreva uma frase que aponte o link do site do curso. Coloque o nome do curso como \"Python para iniciantes\".</p>"},{"location":"saida-de-dados/markdown-rico.html#imagens","title":"Imagens\u00b6","text":"<p>Para adicionar imagens basta seguir a nota\u00e7\u00e3o:</p> <pre>![Nome da Figura](endereco/figura.png)\n</pre> <p>O endere\u00e7o pode ser um endere\u00e7o do computador ou um endere\u00e7o da Web. Abaixo segue um exemplo de uma imagem tirada da internet:</p> <pre>![Logo do Python](https://upload.wikimedia.org/wikipedia/commons/f/f8/Python_logo_and_wordmark.svg)\n</pre> <p>Resulta em:</p> <p></p> <p>Tamb\u00e9m \u00e9 poss\u00edvel adicionar uma figura copiando e colando no Jupyter.</p> <p>Tarefa:</p> <p>Procura uma figura na internet baixe a figura. Salve na mesma pasta do seu notebook e adicione no notebook.</p> <p>Fa\u00e7a a mesma coisa copiando diretamente o endere\u00e7o da figura na internet.</p>"},{"location":"saida-de-dados/markdown-rico.html#lista-de-tarefas","title":"Lista de tarefas\u00b6","text":"<p>Lista de tarefas permite voc\u00ea criar uma lista de itens com caixa de sele\u00e7\u00e3o.</p> <p>Para criar uma lista de tarefas, adicione tra\u00e7os (<code>-</code>) e colchetes com um espa\u00e7o (<code>[ ]</code>) na frente dos itens da lista de tarefas. Para selecionar uma caixa de sele\u00e7\u00e3o, adicione um xentre os colchetes (<code>[x]</code>).</p> <pre>- [x] Estudar Markdown\n- [ ] Estudar Python\n</pre> <p>Resulta em:</p> <ul> <li>Estudar Markdown</li> <li>Estudar Python</li> </ul> <p>Tarefa:</p> <p>Fa\u00e7a uma lista de afazeres desta semana. Marque os itens que j\u00e1 foram concluidos.</p>"},{"location":"saida-de-dados/modulos-e-pacotes.html","title":"M\u00f3dulo e pacotes","text":"In\u00a0[1]: Copied! <pre>import math # Nesta linha eu estou importando o m\u00f3dulo math\n</pre> import math # Nesta linha eu estou importando o m\u00f3dulo math <p>Feito isso, tente escrever o seguinte c\u00f3digo e aperte <code>Tab</code>:</p> math.  <p>Voc\u00ea ver\u00e1 todas as fun\u00e7\u00f5es e constantes (inst\u00e2ncias) deste pacote, como mostra na Figura abaixo:</p> <p></p> <p>Agora apague a c\u00e9lula acima e vamos aprender a calcular a raiz quadrada. Para isso utilize a fun\u00e7\u00e3o <code>sqrt()</code> do m\u00f3dulo <code>math</code>.</p> In\u00a0[2]: Copied! <pre>num = 4\nraiz = math.sqrt(num) # A fun\u00e7\u00e3o sqrt() do m\u00f3dulo 'math' calcula a raiz quadrada \nprint(f\"A raiz quadrada de {num} \u00e9 {raiz}\")\n</pre> num = 4 raiz = math.sqrt(num) # A fun\u00e7\u00e3o sqrt() do m\u00f3dulo 'math' calcula a raiz quadrada  print(f\"A raiz quadrada de {num} \u00e9 {raiz}\") <pre>A raiz quadrada de 4 \u00e9 2.0\n</pre> <p>Dica:</p> <p>Teste o exemplo acima com alguns valores, como 5, 4, 3, 2, etc.</p> <p>Agora vamos arredondar o resultado da raiz utilizando a fun\u00e7\u00e3o <code>ceil()</code>.</p> In\u00a0[3]: Copied! <pre>num = 7\nraiz = math.sqrt(num) # A fun\u00e7\u00e3o sqrt() do m\u00f3dulo 'math' calcula a raiz quadrada \narredondar = math.ceil(raiz) # A fun\u00e7\u00e3o ceil() arredonda para cima um determinado valor\nprint(f\"A raiz quadrada arredondada de {num} \u00e9 {arredondar}\")\n</pre> num = 7 raiz = math.sqrt(num) # A fun\u00e7\u00e3o sqrt() do m\u00f3dulo 'math' calcula a raiz quadrada  arredondar = math.ceil(raiz) # A fun\u00e7\u00e3o ceil() arredonda para cima um determinado valor print(f\"A raiz quadrada arredondada de {num} \u00e9 {arredondar}\") <pre>A raiz quadrada arredondada de 7 \u00e9 3\n</pre> <p>Dica:</p> <p>Teste os exemplos acima com alguns valores, como 5, 4, 3, 2, etc.</p> <p>Tarefa:</p> <p>Vamos praticar com uma constante. Procure a constante <code>pi</code> no m\u00f3dulo Math e execute:</p> <p>Tarefa:</p> <p>Crie um c\u00f3digo que aceite um \u00e2ngulo em graus como entrada, e imprima na tela o seu correspondente em radianos, o seu seno, cosseno e tangente.</p> <p>Observa\u00e7\u00e3o: Utilize a fun\u00e7\u00e3o <code>radians()</code> para fazer a convers\u00e3o de graus para radianos diretamente.</p> <p>Dica: Utilize as fun\u00e7\u00f5es <code>sin()</code>, <code>cos()</code>, <code>tan()</code> para calcular o seno cosseno e tangente.</p> <p>A sa\u00edda do programa deve ser parecida com isso:</p> <pre><code>O \u00e2ngulo 45\u00b0 vale 0.79 rad, tem o seno 0.71, cosseno 0.71 e tangente 1\n</code></pre> <p>Dica:</p> <p>Teste o exemplo acima com os \u00e2ngulos 0, 30, 45, 60 e 90.</p> <p>No caso do m\u00f3dulo de matem\u00e1tica, podemos utilizar o seguinte m\u00f3dulo direto:</p> <p>https://docs.python.org/3/library/math.html</p> <p>L\u00e1 podemos encontrar explica\u00e7\u00f5es detalhadas de todas as fun\u00e7\u00f5es e constantes do m\u00f3dulo <code>math</code>.</p> <p>Tarefa:</p> <p>Buscando na documenta\u00e7\u00e3o do m\u00f3dulo <code>math</code>, crie um programa capaz de calcular as seguintes express\u00f5es:</p> <ul> <li>$e^x$</li> <li>$x!$</li> <li>$\\log_{10}(x+1)$</li> <li>$(\\pi+e)^x$</li> </ul> <p>Considere $x=4$.</p> <p>Observa\u00e7\u00e3o: Teste usar a fun\u00e7\u00e3o <code>pow()</code> no lugar do operador <code>**</code>.</p> <p>A sa\u00edda deve ser parecida com essa:</p> <pre><code>Para o valor de x:  1\ne^1=2.72\n1!=1\nlog10(1+1)!=0.30\n(pi+e)^1!=5.86\n</code></pre> <p>Podemos incluir somente as fun\u00e7\u00f5es e constantes que desejamos trabalhar e eliminamos a necessidade de utilizar <code>math.</code> no in\u00edcio. Veja o exemplo:</p> <pre>from math import pi\npi\n</pre> <p>3.141592653589793</p> <p>Vejamos um exemplo de como calcular o fatorial:</p> In\u00a0[4]: Copied! <pre># Utilizando import\nimport math \nnumero = 5\nfat = math.factorial(numero)\nprint(f\"O fatorial de {numero} \u00e9 {fat}.\")\n</pre> # Utilizando import import math  numero = 5 fat = math.factorial(numero) print(f\"O fatorial de {numero} \u00e9 {fat}.\") <pre>O fatorial de 5 \u00e9 120.\n</pre> <p>Percebemos agora, a maneira mais simples de importar um m\u00f3dulo, que \u00e9 simplesmente digitando <code>import</code> e o nome do m\u00f3dulo logo em seguida. Na hora de chamar a fun\u00e7\u00e3o <code>factorial</code>precisamos especificar que ela pertence ao m\u00f3dulo em quest\u00e3o, por isso a chamamos com <code>math.factorial()</code>.</p> <p>Agora suponha que iremos usar apenas a fun\u00e7\u00e3o <code>factorial</code>, sem usar as outras fun\u00e7\u00f5es do m\u00f3dulo de matem\u00e1tica, a outra forma de faze-lo \u00e9:</p> In\u00a0[5]: Copied! <pre># Utilizando from import\nfrom math import factorial\nnumero = 5\nfat = factorial(numero)\nprint(f\"O fatorial de {numero} \u00e9 {fat}.\")\n</pre> # Utilizando from import from math import factorial numero = 5 fat = factorial(numero) print(f\"O fatorial de {numero} \u00e9 {fat}.\") <pre>O fatorial de 5 \u00e9 120.\n</pre> <p>Tarefa:</p> <p>Refa\u00e7a a tarefa abaixo importando todas as fun\u00e7\u00f5es necess\u00e1rias utilizando a nota\u00e7\u00e3o <code>from</code> <code>import</code></p> <p>Crie um c\u00f3digo que aceite um \u00e2ngulo em graus como entrada, e imprima na tela o seu correspondente em radianos, o seu seno, cosseno e tangente.</p> In\u00a0[6]: Copied! <pre>from math import *\nang_graus = 120\nang_rad = ang_graus*pi/180 #Observe que estamos utilizando a constante pi\nprint(f\"O seno de {ang_graus}\u00b0 \u00e9 {ang_rad:.2g}\")\n</pre> from math import * ang_graus = 120 ang_rad = ang_graus*pi/180 #Observe que estamos utilizando a constante pi print(f\"O seno de {ang_graus}\u00b0 \u00e9 {ang_rad:.2g}\") <pre>O seno de 120\u00b0 \u00e9 2.1\n</pre> <p><code>import *</code> \u00e9 pr\u00e1tico! Mas tome cuidado!</p> <p>Segue alguns motivos para n\u00e3o usar o <code>import *</code>:</p> <ul> <li>Seu c\u00f3digo n\u00e3o fica leg\u00edvel</li> <li>N\u00e3o fica impl\u00edcito no c\u00f3digo da onde vem aquela fun\u00e7\u00e3o</li> <li>Caso um ou mais m\u00f3dulos tenham duas fun\u00e7\u00f5es com o mesmo nome, voc\u00ea n\u00e3o tem como escolher, sempre ser\u00e1 selecionada a \u00faltima fun\u00e7\u00e3o importada!</li> <li>Bugs inesperados</li> <li>Etc</li> </ul> <p>Isso n\u00e3o quer dizer que usar o <code>import *</code> \u00e9 sempre ruim. Ele pode ser pr\u00e1tico em c\u00f3digos pequenos, ou em m\u00f3dulos que voc\u00ea j\u00e1 conhece bem e que voc\u00ea saiba o que est\u00e1 fazendo.</p> <p>Para mais detalhes clique aqui.</p> In\u00a0[7]: Copied! <pre>from random import random # A fun\u00e7\u00e3o random() gera um float pseudo aleat\u00f3rio de 0.0 &lt;= x &lt; 1.0\nfrom math import floor # A fun\u00e7\u00e3o ceil() arredonda para baixo\n</pre> from random import random # A fun\u00e7\u00e3o random() gera um float pseudo aleat\u00f3rio de 0.0 &lt;= x &lt; 1.0 from math import floor # A fun\u00e7\u00e3o ceil() arredonda para baixo In\u00a0[8]: Copied! <pre>aleatorio=floor(10*random()) # Gera um n\u00famero pseudo aleat\u00f3rio de 0 a 9\naleatorio\n</pre> aleatorio=floor(10*random()) # Gera um n\u00famero pseudo aleat\u00f3rio de 0 a 9 aleatorio Out[8]: <pre>5</pre> <p>Observe que nesse exemplo para conseguir esse efeito combinamos duas fun\u00e7\u00f5es de m\u00f3dulos diferentes.</p> <p>Tarefa:</p> <p>Olhando a documenta\u00e7\u00e3o do m\u00f3dulo <code>random</code> refa\u00e7a o exemplo sem utilizar o m\u00f3dulo <code>math</code>.</p> <p>Tarefa:</p> <p>Lendo a documenta\u00e7\u00e3o indique quais m\u00f3dulos s\u00e3o mais adequados para:</p> <ul> <li>Trabalhar com o tempo (Horas, dias, semanas).</li> <li>Trabalhar com diret\u00f3rios e arquivos.</li> <li>Trabalhar com tabelas do tipo csv.</li> <li>Trabalhar com fun\u00e7\u00f5es do sistema operacional.</li> </ul> In\u00a0[9]: Copied! <pre>import math as m\nnumero = 7\nfat = m.factorial(numero)\nprint(\"O fatorial de {} \u00e9 {}.\".format(numero, fat))\n</pre> import math as m numero = 7 fat = m.factorial(numero) print(\"O fatorial de {} \u00e9 {}.\".format(numero, fat)) <pre>O fatorial de 7 \u00e9 5040.\n</pre> <p>Observe que a sintaxe <code>import math as m</code> tornou o mesmo m\u00f3dulo dispon\u00edvel agora por um nome diferente, no caso, <code>mat</code>. Dessa forma, podemos chamar uma fun\u00e7\u00e3o do m\u00f3dulo como <code>m.fun\u00e7\u00e3o</code>, como mostrado acima.</p> <p>Essa funcionalidade \u00e9 particularmente \u00fatil quando o nome do m\u00f3dulo \u00e9 grande e a tarefa de escreve-lo diversas vezes torna-se chata, como \u00e9 mostrado abaixo:</p> <pre>import matplotlib.pyplot as plt # Subm\u00f3dulo para plotar gr\u00e1ficos\n</pre> <p>Sempre prefira essa nota\u00e7\u00e3o de <code>import [nome_do_pacote] as [novo_nome_do_pacote]</code>ao inv\u00e9s de apenas <code>import * </code>, pois desta forma voc\u00ea deixa o c\u00f3digo leg\u00edvel e evita a tarefa chata de ter que escrever o nome completo do m\u00f3dulo toda vez que vai utilizar uma funcionalidade do m\u00f3dulo.</p> <p>Tarefa:</p> <p>Considere o c\u00f3digo abaixo, substitua o <code>from math import *</code> por <code>\u00ecmport math as m</code>:</p> In\u00a0[10]: Copied! <pre>from math import *\nang_graus = 90\nang_rad = ang_graus*pi/180 #Observe que estamos utilizando a constante pi\nprint(f\"O seno de {ang_graus}\u00b0 \u00e9 {sin(ang_rad):.2g} rad.\")\n</pre> from math import * ang_graus = 90 ang_rad = ang_graus*pi/180 #Observe que estamos utilizando a constante pi print(f\"O seno de {ang_graus}\u00b0 \u00e9 {sin(ang_rad):.2g} rad.\") <pre>O seno de 90\u00b0 \u00e9 1 rad.\n</pre> <p>Figura 1: Representa\u00e7\u00e3o do m\u00f3dulo Math.</p> <p>No python, tamb\u00e9m h\u00e1 o conceito de Pacote. Podemos ver os pacotes como m\u00f3dulos que cont\u00e9m outros m\u00f3dulos separados por tem\u00e1tica. Na imagem abaixo temos o pacote <code>Game</code>. Dentro deste pacote existem outros m\u00f3dulos.</p> <pre>\nclassDiagram\n    Game .. Som\n    Game .. Imagem\n    Game .. Fase\n\n    class Game {\n        &lt;&gt;\n    }\n\n    class Som {\n        &lt;&gt;\n        +volumeEfeito\n        +volumeMusica\n        +reproduzirEfeito()\n        +reproduzirMusica()\n        +mudarVolume()\n    }\n\n    class Imagem {\n        &lt;&gt;\n        +qualidade\n        +filtros\n        +mudarQualidade()\n        +mudarFiltros()\n    }\n\n    class Fase {\n        &lt;&gt;\n        +mundo\n        +numero\n        +chefe\n        +entrar()\n        +derrotarChefe()\n    }\n</pre> <p>Figura 2: Conceito de pacote.</p> <p>O nosso pacote fict\u00edcio agora possui v\u00e1rios sub-m\u00f3dulos, cada um deles com diversas fun\u00e7\u00f5es diferentes e de modo mais organizado na vis\u00e3o do programador.</p> <p>Muitos dos pacotes utilizados pela comunidade Python n\u00e3o vem por padr\u00e3o na linguagem. Por sorte o Anaconda tr\u00e1s diversos pacotes \u00fateis para o programador Python. Desta forma n\u00e3o precisamos nos preocupar em instalar muitos pacotes utilizados na comunidade Python. Podemos citar alguns exemplos de pacotes que vem junto com o Anaconda:</p> <ul> <li>Numpy - Computa\u00e7\u00e3o cient\u00edfica e gerenciamento de arrays e matrizes</li> <li>Scipy - Computa\u00e7\u00e3o cient\u00edfica (Extens\u00e3o do NumPy)</li> <li>Sympy - Vari\u00e1veis simb\u00f3licas</li> <li>Pandas - An\u00e1lise de dados</li> <li>Matplotlib - Gr\u00e1ficos e plotagens</li> <li>Plotly - Plotagem de gr\u00e1ficos din\u00e2micos</li> <li>Seaborn - Plotagem de gr\u00e1ficos estat\u00edsticos</li> <li>TensorFlow - Tensores e Intelig\u00eancia Artificial (Google)</li> <li>Keras - Intelig\u00eancia artificial (Google)</li> <li>PyTorch - Intelig\u00eancia Artificial (Meta)</li> <li>Scikit-learn - Machine Learning</li> <li>OpenCV - Processamento de imagens</li> <li>Pillow - Visualiza\u00e7\u00e3o e processamento de imagens</li> </ul> <p>Pode ser que na sua m\u00e1quina estes pacotes n\u00e3o estejam instalados. Entretanto podemos instal\u00e1-los utilizando o terminal e utilizando o comando:</p> <p><code>conda install [pacote]</code></p> <p>O <code>conda</code> \u00e9 o gerenciador de pacotes do Anaconda. Atrav\u00e9s desse comando podemos instalar, pesquisar e desinstalar pacotes. Abaixo segue alguns comandos que podemos utilizar no gerenciador de pacotes do Anaconda.</p> Comando Fun\u00e7\u00e3o <code>install [pacote]</code> Instala um pacote <code>--help</code> Ajuda <code>uninstall [pacote]</code> Remove um pacote <code>search [palavra]</code> Procura por um determinado pacote baseado em uma palavra update Faz o update de todos os pacotes do Anaconda <p>\u00c9 um pacote fundamental para computa\u00e7\u00e3o cient\u00edfica em Python. Ele fornece suporte para arrays multidimensionais e fun\u00e7\u00f5es matem\u00e1ticas de alto desempenho, como opera\u00e7\u00f5es de \u00e1lgebra linear, fun\u00e7\u00f5es trigonom\u00e9tricas, dentre outras.</p> <p>A documenta\u00e7\u00e3o do numpy est\u00e1 dispon\u00edvel aqui.</p> <p>A documenta\u00e7\u00e3o recomenda que o NumPy seja importado com o alias <code>np</code>, que deixa a escrita do c\u00f3digo mais concisa. Para import\u00e1-lo siga a linha de c\u00f3digo abaixo:</p> <pre>import numpy as np\n</pre> <p>Por exemplo, podemos reescrever o c\u00f3digo para c\u00e1lculo de fatorial usando o numpy:</p> In\u00a0[11]: Copied! <pre>import numpy as np\n</pre> import numpy as np In\u00a0[12]: Copied! <pre>num = 4\nraiz = np.sqrt(num) # A fun\u00e7\u00e3o sqrt() do m\u00f3dulo 'math' calcula a raiz quadrada \nprint(f\"A raiz quadrada de {num} \u00e9 {raiz}\")\n</pre> num = 4 raiz = np.sqrt(num) # A fun\u00e7\u00e3o sqrt() do m\u00f3dulo 'math' calcula a raiz quadrada  print(f\"A raiz quadrada de {num} \u00e9 {raiz}\") <pre>A raiz quadrada de 4 \u00e9 2.0\n</pre> <p>Tarefa:</p> <p>Buscando na documenta\u00e7\u00e3o do m\u00f3dulo Numpy, crie um programa capaz de calcular as seguintes express\u00f5es:</p> <ul> <li>$e^x$</li> <li>$x!$</li> <li>$\\log_{10}(x+1)$</li> <li>$(\\pi+e)^x$</li> </ul> <p>Considere $x=4$.</p> <p>Tarefa:</p> <p>Crie um c\u00f3digo que receba as notas do bimestre de 4 alunos conforme a tabela abaixo, compute a m\u00e9dia e arredonde pra cima. Voc\u00ea dever\u00e1 usar o m\u00f3dulo NumPy e consultar a documenta\u00e7\u00e3o para entender a fun\u00e7\u00e3o que arredonda e usa-la no seu programa. O c\u00f3digo dever\u00e1 imprimir na tela a m\u00e9dia final de cada um e o quanto cada aluno ganhou de nota no arredondamento.</p> Aluno N1 N2 N3 N4 Pedrinho 7.00 8.75 8.3 5.60 Jo\u00e3ozinho 7.00 7.00 8.1 9.00 Juninho 6.40 7.50 8.45 9.00 <p>Primeiro importamos o sub-m\u00f3dulo display do IPython:</p> In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[13]: Copied! <pre># Importando o IPython.display\nimport IPython.display as ipy\n</pre> # Importando o IPython.display import IPython.display as ipy <p>Agora veja alguns exemplos:</p> <p>Audio:</p> In\u00a0[14]: Copied! <pre># Posso reproduzir um audio qualquer no meu notebook\nipy.Audio(url=\"http://www.w3schools.com/html/horse.ogg\")\n</pre> # Posso reproduzir um audio qualquer no meu notebook ipy.Audio(url=\"http://www.w3schools.com/html/horse.ogg\") Out[14]:                      Your browser does not support the audio element.                  <p>Imagem:</p> In\u00a0[15]: Copied! <pre># Posso mostrar imagens no meu notebook\nipy.Image(url='http://www.google.fr/images/srpr/logo3w.png')\n</pre> # Posso mostrar imagens no meu notebook ipy.Image(url='http://www.google.fr/images/srpr/logo3w.png') Out[15]: <p>C\u00f3digo HTML (Linguagem da Web):</p> In\u00a0[16]: Copied! <pre>ipy.HTML('&lt;p style=\"color:blue\"&gt;Um texto azul em HTML.&lt;/p&gt;')\n</pre> ipy.HTML('<p>Um texto azul em HTML.</p>') Out[16]: <p>Um texto azul em HTML.</p> <p>Youtube:</p> In\u00a0[17]: Copied! <pre>ipy.YouTubeVideo('St9pE2bv0zQ')\n</pre> ipy.YouTubeVideo('St9pE2bv0zQ') Out[17]: <p>Um site (IFrame):</p> In\u00a0[18]: Copied! <pre># Podemos colocar um IFrame, que de forma simplificada \u00e9 uma p\u00e1gina web incorporada ao Notebook\nipy.IFrame(src=\"https://lucaslrodri.github.io/python-for-dummies/\", width=400, height=300)\n</pre> # Podemos colocar um IFrame, que de forma simplificada \u00e9 uma p\u00e1gina web incorporada ao Notebook ipy.IFrame(src=\"https://lucaslrodri.github.io/python-for-dummies/\", width=400, height=300) Out[18]: <p>Markdown:</p> In\u00a0[19]: Copied! <pre>TextoEmMarkdown=\"Este texto est\u00e1 em _it\u00e1lico_ e este em **negrito**.\"\n\nipy.Markdown(TextoEmMarkdown)\n</pre> TextoEmMarkdown=\"Este texto est\u00e1 em _it\u00e1lico_ e este em **negrito**.\"  ipy.Markdown(TextoEmMarkdown) Out[19]: <p>Este texto est\u00e1 em it\u00e1lico e este em negrito.</p> <p>Observe que todas as vezes que digitamos as sa\u00eddas Markdown sempre apareceu aquele n\u00famero em colchetes que fica do lado esquerdo da c\u00e9lula (Exemplo <code>[12]:</code>). Para eliminar isso basta chamar a fun\u00e7\u00e3o <code>ipy.Markdown()</code> dentro da fun\u00e7\u00e3o <code>display()</code>. Veja abaixo:</p> In\u00a0[20]: Copied! <pre>TextoEmMarkdown=\"Este texto est\u00e1 em _it\u00e1lico_ e este em **negrito**.\"\n\ndisplay(ipy.Markdown(TextoEmMarkdown))\n</pre> TextoEmMarkdown=\"Este texto est\u00e1 em _it\u00e1lico_ e este em **negrito**.\"  display(ipy.Markdown(TextoEmMarkdown)) <p>Este texto est\u00e1 em it\u00e1lico e este em negrito.</p> <p>Tarefa:</p> <p>Vimos nos primeiros cap\u00edtulos como escrever strings multi-linhas. Quando queremos escrever textos longos  atrav\u00e9s da sa\u00edda do IPython utilizar a nota\u00e7\u00e3o multi-linha \u00e9 util.</p> <p>Fa\u00e7a uma lista de compras em Python e mostre-a em Markdown.</p> <p>Dica: Use como base:</p> <pre>**Lista de compras:**\n\n- Ma\u00e7a\n- Banana\n- Leite\n- Queijo\n</pre> <p>Segundo este mesmo site no momento em que este roteiro est\u00e1 sendo escrito existem 267182 pacotes dispon\u00edveis para instalar atrav\u00e9s desse gerenciador.</p> <p>Voc\u00ea pode encontrar uma pequena descri\u00e7\u00e3o do pacote ao buscar dentro desta plataforma.</p> <p>Geralmente os pacotes t\u00eam seu c\u00f3digo fonte dispon\u00edvel no Github, portanto se no site pypi n\u00e3o tiver muita informa\u00e7\u00e3o desse pacote, procure-o no Github, com uma simples pesquisa no Google:</p> <p></p> <p>Observa\u00e7\u00e3o:</p> <p>Inclusive este site est\u00e1 hospedado no Github.</p> <p>Outro site muito relevante para encontrar documenta\u00e7\u00e3o de pacotes em python \u00e9 o Read the Docs, um site de documenta\u00e7\u00e3o.</p> <p></p> <p>Por exemplo, o pr\u00f3pria documenta\u00e7\u00e3o do JupyterLab est\u00e1 hospedada l\u00e1:</p> <p>https://jupyterlab.readthedocs.io/en/latest/</p> <p>A sintaxe  de comando do <code>pip</code> \u00e9 muito parecida com a do <code>conda</code>:</p> Comando Fun\u00e7\u00e3o <code>install [pacote]</code> Instala um pacote <code>--help</code> Ajuda <code>uninstall [pacote]</code> Remove um pacote <code>search [palavra]</code> Procura por um determinado pacote baseado em uma palavra update Faz o update de todos os pacotes do Anaconda <p>Mais comandos podem ser vistos aqui.</p> <p>Control : Python Control Systems Library</p> <p>\u00c1rea: Engenharia El\u00e9trica / Engenharia de controle e automa\u00e7\u00e3o</p> <p>Descri\u00e7\u00e3o: Permite a an\u00e1lise e opera\u00e7\u00e3o de sistemas de controle.</p> <p>Documenta\u00e7\u00e3o: http://python-control.readthedocs.org/</p> <p>Reposit\u00f3rio (Github): https://github.com/python-control/python-control</p> <p>Instala\u00e7\u00e3o (PyPI): https://pypi.org/project/control/</p> <pre>conda install -c conda-forge control slycot #M\u00e9todo recomendado\n</pre> <p>ou</p> <pre>pip install slycot   # optional; see below\npip install control\n</pre> <p>Exemplo relevante:</p> <p>https://github.com/python-control/python-control/blob/master/examples/bode-and-nyquist-plots.ipynb</p> <p>Foto relevante:</p> <p></p> <p>Lcapy : Linear Circuit Analysis</p> <p>\u00c1rea: Engenharia El\u00e9trica</p> <p>Descri\u00e7\u00e3o:</p> <ul> <li>Lcapy \u00e9 um pacote para an\u00e1lise de circuitos lineares.</li> <li>Usa o SymPy para a an\u00e1lise simb\u00f3lica.</li> <li>Permite o desenho de alguns esquem\u00e1ticos utilizando c\u00f3digo Python.</li> </ul> <p>Documenta\u00e7\u00e3o: http://lcapy.elec.canterbury.ac.nz/</p> <p>Reposit\u00f3rio (Github): https://github.com/mph-/lcapy</p> <p>Instala\u00e7\u00e3o (PyPI): https://pypi.org/project/lcapy/</p> <pre><code>pip install lcapy\n</code></pre> <p>Exemplo relevante:</p> <p>https://github.com/mph-/lcapy/blob/master/doc/examples/notebooks/superposition1.ipynb</p> <p>Foto relevante:</p> <p></p>"},{"location":"saida-de-dados/modulos-e-pacotes.html#modulo-e-pacotes","title":"M\u00f3dulo e pacotes\u00b6","text":""},{"location":"saida-de-dados/modulos-e-pacotes.html#importando-modulos","title":"Importando m\u00f3dulos\u00b6","text":"<p>O python possui muitas fun\u00e7\u00f5es e operadores que nativa da pr\u00f3pria linguagem de programa\u00e7\u00e3o  como os operadores b\u00e1sicos (+,-,*,/), potencia\u00e7\u00e3o (**) impress\u00e3o de valores (<code>print()</code>,<code>.format()</code>), e etc.</p> <p>No entanto, h\u00e1 algumas funcionalidades que voc\u00ea ir\u00e1 precisar para produzir seu c\u00f3digo, mas que n\u00e3o tem nativamente na linguagem Python, podemos ent\u00e3o importar tais funcionalidades para o nosso trabalho como m\u00f3dulos.</p> <p>Agora vejam a defini\u00e7\u00e3o de m\u00f3dulo segundo um trecho da a pr\u00f3pria documenta\u00e7\u00e3o do Python:</p> <p>M\u00f3dulos s\u00e3o um conjunto de c\u00f3digos como fun\u00e7\u00f5es, classes, vari\u00e1veis, etc. Se voc\u00ea estiver fazendo um programa e ele se tornar muito grande, dif\u00edcil de ler e se situar nele, \u00e9 uma boa pr\u00e1tica dividi-lo em arquivos menores, para facilitar a manuten\u00e7\u00e3o. Tamb\u00e9m \u00e9 prefer\u00edvel usar um arquivo separado para uma fun\u00e7\u00e3o que voc\u00ea escreveria em v\u00e1rios programas diferentes, para n\u00e3o copiar a defini\u00e7\u00e3o de fun\u00e7\u00e3o em cada um deles.</p> <p>Para permitir isso, o Python tem uma maneira de colocar as defini\u00e7\u00f5es em um arquivo e ent\u00e3o us\u00e1-las em um script ou em uma execu\u00e7\u00e3o interativa do interpretador. Tal arquivo \u00e9 chamado de m\u00f3dulo; defini\u00e7\u00f5es de um m\u00f3dulo podem ser importadas para outros m\u00f3dulos, ou para o m\u00f3dulo principal.</p>"},{"location":"saida-de-dados/modulos-e-pacotes.html#importando-um-modulo","title":"Importando um m\u00f3dulo\u00b6","text":"<p>Para o nosso primeiro exemplo vamos importar o m\u00f3dulo math, um m\u00f3dulo que estende o Python com algumas funcionalidades matem\u00e1ticas.</p> <p>Execute a c\u00e9lula abaixo:</p>"},{"location":"saida-de-dados/modulos-e-pacotes.html#documentacao-do-math","title":"Documenta\u00e7\u00e3o do math\u00b6","text":"<p>Praticamente todo m\u00f3dulo ou pacote do Python tem uma documenta\u00e7\u00e3o dispon\u00edvel na internet. O m\u00f3dulo <code>math</code> \u00e9 um m\u00f3dulo built-in, ou seja, ele \u00e9 um m\u00f3dulo que j\u00e1 vem junto com o Python. Para estes m\u00f3dulos podemos olhar a pr\u00f3pria documenta\u00e7\u00e3o do Python. Essa documenta\u00e7\u00e3o est\u00e1 dispon\u00edvel no menu <code>Help&gt;Python Reference</code> ou no pr\u00f3prio site do python, na parte de Docs.</p> <p></p>"},{"location":"saida-de-dados/modulos-e-pacotes.html#from-import","title":"from ... import ...\u00b6","text":"<p>\u00c9 muito chato toda vez que for utilizar alguma funcionalidade da fun\u00e7\u00e3o math, ter que escrever <code>math.</code> no in\u00edcio. Atrav\u00e9s da sintaxe:</p> <pre>from [m\u00f3dulo] import [fun\u00e7\u00e3o1], [fun\u00e7\u00e3o2], [constante1], [etc]\n</pre>"},{"location":"saida-de-dados/modulos-e-pacotes.html#from-import","title":"from ... import *\u00b6","text":"<p>Caso n\u00e3o soubermos as fun\u00e7\u00f5es que iremos utilizar, ou se iremos utilizar muitas fun\u00e7\u00f5es de um determinado m\u00f3dulo, podemos importar todas as fun\u00e7\u00f5es deste m\u00f3dulo utilizando a nota\u00e7\u00e3o:</p> <pre>from [m\u00f3dulo] import *\n</pre>"},{"location":"saida-de-dados/modulos-e-pacotes.html#outros-modulos-built-in","title":"Outros m\u00f3dulos built-in\u00b6","text":"<p>Al\u00e9m do m\u00f3dulo math, existem outros m\u00f3dulos built-in e voc\u00ea pode encontr\u00e1-los na documenta\u00e7\u00e3o do Python, em <code>Library reference</code> (A p\u00e1gina tem o t\u00edtulo <code>Python Library Standard </code>)</p> <p></p> <p>Esta p\u00e1gina mostra diversos m\u00f3dulos em formas de categorias.</p> <p>Para continuarmos os nossos exerc\u00edcios vamos utilizar uma outro m\u00f3dulo de matem\u00e1tica, o m\u00f3dulo <code>random</code>. Ele est\u00e1 na se\u00e7\u00e3o <code>Numeric and Mathematical Modules</code>. Vamos ver um exemplo com a fun\u00e7\u00e3o <code>random()</code>:</p>"},{"location":"saida-de-dados/modulos-e-pacotes.html#apelidando-modulos-alias","title":"Apelidando m\u00f3dulos (alias)\u00b6","text":"<p>Uma outra forma de importar m\u00f3dulos \u00e9 renomeando-o. Observe novamente o exemplo do fatorial:</p>"},{"location":"saida-de-dados/modulos-e-pacotes.html#pacotes-do-anaconda","title":"Pacotes do Anaconda\u00b6","text":"<p>Como dito anteriormente, podemos ver os m\u00f3dulos como se fossem caixas com diversas fun\u00e7\u00f5es \u00fateis dentro, e que podemos acessa-las com um <code>import</code>.</p> <pre>\nclassDiagram\n\tclass Math{\n\t\t&lt;&gt;\n\t\tpi\n\t\te\n\t\tinf\n\t\tetc\n\t\tceil(x)\n\t\tcomb(n,k)\n\t\tcopysign(x,y)\n\t\tetc()\n\t}\n</pre>"},{"location":"saida-de-dados/modulos-e-pacotes.html#pacote-numpy","title":"Pacote Numpy\u00b6","text":""},{"location":"saida-de-dados/modulos-e-pacotes.html#pacote-ipython-saidas-ricas","title":"Pacote IPython (Sa\u00eddas ricas)\u00b6","text":"<p>Nos cap\u00edtulos anteriores vimos que o <code>print()</code> \u00e9 a principal fun\u00e7\u00e3o de impress\u00e3o do Python, mas n\u00e3o \u00e9 a \u00fanica. Neste cap\u00edtulo ser\u00e1 introduzido as sa\u00eddas do IPython.</p> <p>A sa\u00edda IPython \u00e9 muito rica, com ela podemos mostrar:</p> <ul> <li>Audio</li> <li>Videos (Inclusive do Youtube)</li> <li>Videos do Youtube</li> <li>LaTeX</li> <li>Equa\u00e7\u00f5es</li> <li>HTML (E c\u00f3digo JavaScript)</li> <li>Figuras</li> <li>Sites (IFrame)</li> <li>Markdown</li> <li>Dentre outros</li> </ul> <p>Mais detalhes podem ser vistos na documenta\u00e7\u00e3o.</p>"},{"location":"saida-de-dados/modulos-e-pacotes.html#funcao-display","title":"Fun\u00e7\u00e3o display\u00b6","text":""},{"location":"saida-de-dados/modulos-e-pacotes.html#pacotes-externos","title":"Pacotes externos\u00b6","text":"<p>Existem outros gerenciadores de pacotes al\u00e9m do <code>conda</code>. O Python Package Index (PyPI), ou simplesmente pip, \u00e9 o gerenciador padr\u00e3o do Python, e muitas vezes s\u00f3 podemos encontrar um pacote neste gerenciador. Voc\u00ea pode encontrar um link do site oficial do pip no pr\u00f3prio site do Python.</p> <p></p>"},{"location":"saida-de-dados/modulos-e-pacotes.html#pacotes-para-stem","title":"Pacotes para STEM\u00b6","text":"<p>Na \u00e1rea de STEM (Ci\u00eancia, Tecnologia, Matem\u00e1tica e Engenharia) existem uma infinidade de pacotes \u00fateis que podem ser instalados atrav\u00e9s do <code>pip</code> (ou <code>conda</code>) ou seguindo as instru\u00e7\u00f5es no <code>github</code>.</p> <p>Observa\u00e7\u00e3o:</p> <p>Estou dando dicas de pacotes de STEM, porque \u00e9 a \u00e1rea que eu trabalho.</p> <p>Agora vamos aos exemplos:</p> <ul> <li>Jupyter TikZ - Desenho em geral usando Jupyter (Minha biblioteca)</li> <li>Schemdraw - Desenho de circuitos el\u00e9tricos e diagramas l\u00f3gicos</li> <li>Control - Modelagem e projeto de sistemas de controle</li> <li>Lcapy - Linear Circuit Analysis (An\u00e1lises de circuitos lineares)</li> <li>pysimCoder - Editor de blocos similar ao Simulink</li> <li>PySpice - Simulador de circuitos</li> <li>py-dss-interface - Interface do Python com o OpenDSS (Simulador para sistemas de distribui\u00e7\u00e3o de energia el\u00e9trica)</li> </ul> <p>Tarefa:</p> <p>Pesquise pacotes relevantes na internet que seja \u00fatil para a sua \u00e1rea e fa\u00e7a um resumo desse pacote.</p> <p>Segue dois exemplos:</p>"},{"location":"saida-de-dados/saida-de-dados.html","title":"Strings e sa\u00edda de dados","text":"<p>Vimos que \u00e9 poss\u00edvel mostrar uma express\u00e3o, dado ou vari\u00e1vel escrevendo o valor desta vari\u00e1vel no final da c\u00e9lula. Entretanto nem sempre utilizamos o Jupyter Notebook para programar em Python. Entretanto, desta forma estamos limitado ao \u00faltimo dado da c\u00e9lula. Quando queremos imprimir algum dado intermedi\u00e1rio ou com alguma constru\u00e7\u00e3o mais complexa devemos recorrer \u00e0 fun\u00e7\u00e3o de sa\u00edda de dados <code>print()</code>. De forma similar, existe uma fun\u00e7\u00e3o que permite imprimir dados crus <code>display()</code>.</p> <p>A fun\u00e7\u00e3o <code>print()</code> tem o objetivo de imprimir na tela o valor que estiver sendo passado. Veja e execute a c\u00e9lula abaixo.</p> In\u00a0[\u00a0]: Copied! <pre>print(\"Este \u00e9 um texto comum\")\nvar1 = 300\nprint(var1)\n</pre> print(\"Este \u00e9 um texto comum\") var1 = 300 print(var1) <p>Tarefa:</p> <p>Com as fun\u00e7\u00f5es de sa\u00edda podemos criar programas mais complexos. Como por exemplo um programa capaz de converter a temperatura. Considere a seguinte f\u00f3mula:</p> <p>$$ C=5\\times((F-32)/9) $$</p> <p>Onde $C$ representa a temperatura em Celcius e $F$ representa a temperatura em Fahrenheit.</p> <p>A sa\u00edda do programa deve ser algo como:</p> <pre><code>A temperatura em Celcius \u00e9 de XX graus.\n</code></pre> <p>Teste-o para a temperatura de $100^oF$, $32^oF$ e $192^oF$.</p> <p>Dica:</p> <p>Defina a temperatura em Fahrenheit como uma vari\u00e1vel e altere a sa\u00edda dela.</p> In\u00a0[2]: Copied! <pre>print(\"Esta \u00e9 a primeira linha.\\nEsta \u00e9 a segunda linha.\\nEsta \u00e9 a terceira linha.\")\n</pre> print(\"Esta \u00e9 a primeira linha.\\nEsta \u00e9 a segunda linha.\\nEsta \u00e9 a terceira linha.\") <pre>Esta \u00e9 a primeira linha.\nEsta \u00e9 a segunda linha.\nEsta \u00e9 a terceira linha.\n</pre> <p>Uma outra forma de trabalhar com strings multi-linhas \u00e9 usando tr\u00eas delimitadores de strings, como mostra abaixo:</p> In\u00a0[4]: Copied! <pre>print(\"\"\"Esta \u00e9 a primeira linha.\nEsta \u00e9 a segunda linha.\nEsta \u00e9 a terceira linha.\"\"\")\n</pre> print(\"\"\"Esta \u00e9 a primeira linha. Esta \u00e9 a segunda linha. Esta \u00e9 a terceira linha.\"\"\") <pre>Esta \u00e9 a primeira linha.\nEsta \u00e9 a segunda linha.\nEsta \u00e9 a terceira linha.\n</pre> <p>Observa\u00e7\u00e3o:</p> <p>Essa \u00e9 a mesma nota\u00e7\u00e3o utilizada para escrever coment\u00e1rio multi-linha.</p> <p>Tarefa:</p> <p>Crie um programa capaz de calcular a raiz quadrada, o dobro e o triplo de um n\u00famero. Cada resultado deve ser impresso em uma \u00fanica linha.</p> <ul> <li>Fa\u00e7a a tarefa utilizando o caracter <code>\\n</code></li> <li>Fa\u00e7a a tarefa utilizando a sint\u00e1xe de string multi-linha</li> </ul> <p>Tarefa:</p> <p>Repita o exemplo abaixo usando a fun\u00e7\u00e3o <code>display()</code>:</p> <pre># Troque pela fun\u00e7\u00e3o display aqui\nprint(\"Esta \u00e9 a primeira linha.\\nEsta \u00e9 a segunda linha.\\nEsta \u00e9 a terceira linha.\")\n</pre> <p>O que voc\u00ea v\u00ea de diferente em rela\u00e7\u00e3o \u00e0 fun\u00e7\u00e3o <code>print()</code>?</p> <p>Escreva a resposta em uma string usando a fun\u00e7\u00e3o <code>display()</code>.</p> <p>At\u00e9 agora trabalhamos com a fun\u00e7\u00e3o <code>print()</code>  recebendo um \u00fanico argumento de entrada (par\u00e2metro) na forma de string. Entretanto esta fun\u00e7\u00e3o permite que voc\u00ea insira mais de argumento (par\u00e2metro).  Veja o exemplo abaixo:</p> In\u00a0[1]: Copied! <pre>nome = 'Lucas'\ndata = 19\nmes='Abril'\nprint('O meu nome \u00e9',nome,'e minha data de anivers\u00e1rio \u00e9',data,'de',mes,'.')\n</pre> nome = 'Lucas' data = 19 mes='Abril' print('O meu nome \u00e9',nome,'e minha data de anivers\u00e1rio \u00e9',data,'de',mes,'.') <pre>O meu nome \u00e9 Lucas e minha data de anivers\u00e1rio \u00e9 19 de Abril .\n</pre> <p>Observe que no exemplo acima n\u00e3o houve necessidade de adicionar espa\u00e7o no final da string. A pr\u00f3pria fun\u00e7\u00e3o <code>print()</code> fez isso para a gente.</p> <p>Tarefa:</p> <p>Crie um programa que pe\u00e7a como entrada tr\u00eas palavras e forme uma frase com essas tr\u00eas palavras. A sa\u00edda deve ser mostrada como:</p> <pre><code>A frase formada com essas tr\u00eas palavras \u00e9: [palavra1] [palavra2] [palavra3]\n</code></pre> <p>Dica:</p> <p>Salve as palavras em vari\u00e1veis.</p> <p>Quando trabalhamos com m\u00faltiplos objetos de entrada, percebemos que sempre entre um par\u00e2metro e outro, \u00e9 adicionado um espa\u00e7o em branco. Al\u00e9m disso, ao final do <code>print()</code> havia sempre uma quebra linha. Este \u00e9 o comportamento padr\u00e3o da fun\u00e7\u00e3o <code>print()</code> , entretanto podemos alter\u00e1-lo mudando os par\u00e2metros opcionais <code>sep=</code> e <code>end=</code>. Descritos na tabela abaixo:</p> Par\u00e2metro opcional Descri\u00e7\u00e3o sep Quando dois ou mais argumentos s\u00e3o passados para a fun\u00e7\u00e3o <code>print()</code> sep coloca entre eles um espa\u00e7o em branco ou um outro valor que podemos passar para sep. end O valor padr\u00e3o de end \u00e9 uma nova linha <code>\\n</code> e por isso que sempre a fun\u00e7\u00e3o print adiciona uma nova linha depois de imprimir tudo que lhe foi passado, mas, podemos definir outro valor com uma tabula\u00e7\u00e3o <code>\\t</code> por exemplo. <p>Sendo assim a nota\u00e7\u00e3o da fun\u00e7\u00e3o <code>print()</code> \u00e9 da seguinte forma:</p> <pre>print(arg1,arg2,arg3,...,sep=valor_do_sep,end=valor_do_end)\n</pre> <p>Veja e execute o exemplo abaixo:</p> In\u00a0[\u00a0]: Copied! <pre>ano1 = '1980'\nano2 = '1990'\nano3 = '2000'\nano4 = '2010'\n\ntexto = \"Alterando o valor de sep\"\nprint(texto)\nprint(ano1, ano2, ano3, ano4, sep='---&gt;')\n\n# pula uma linha\nprint()\n\ntexto = \"Alterando o valor de sep e end\"\nprint(texto)\nprint(ano1, ano2, ano3, ano4, sep='---&gt;', end='.\\n')\n</pre> ano1 = '1980' ano2 = '1990' ano3 = '2000' ano4 = '2010'  texto = \"Alterando o valor de sep\" print(texto) print(ano1, ano2, ano3, ano4, sep='---&gt;')  # pula uma linha print()  texto = \"Alterando o valor de sep e end\" print(texto) print(ano1, ano2, ano3, ano4, sep='---&gt;', end='.\\n')"},{"location":"saida-de-dados/saida-de-dados.html#strings-e-saida-de-dados","title":"Strings e sa\u00edda de dados\u00b6","text":""},{"location":"saida-de-dados/saida-de-dados.html#funcoes-de-saida-de-dados","title":"Fun\u00e7\u00f5es de sa\u00edda de dados\u00b6","text":""},{"location":"saida-de-dados/saida-de-dados.html#funcao-print","title":"Fun\u00e7\u00e3o print\u00b6","text":""},{"location":"saida-de-dados/saida-de-dados.html#caracter-nova-linha","title":"Caracter nova linha\u00b6","text":"<p>Quando queremos escrever uma string com mais de uma linha podemos recorrer ao caracter <code>\\n</code>. Este caracter simboliza uma quebra linha. Veja o exemplo abaixo:</p>"},{"location":"saida-de-dados/saida-de-dados.html#funcao-display","title":"Fun\u00e7\u00e3o display\u00b6","text":"<p>A fun\u00e7\u00e3o <code>display()</code> tamb\u00e9m exibe um resultado na tela, por\u00e9m de forma diferente da fun\u00e7\u00e3o <code>print()</code>. Esta fun\u00e7\u00e3o \u00e9 exclusiva do Jupyter, e  utiliza o mecanismo de representa\u00e7\u00e3o multimodal do ambiente, permitindo que os dados sejam exibidos em diferentes formatos, como texto, HTML, Markdown, LaTeX, ou gr\u00e1ficos, dependendo das representa\u00e7\u00f5es dispon\u00edveis no objeto.</p> <p>Ela pode utilizar diferentes m\u00e9todos de representa\u00e7\u00e3o, dependendo do tipo de dado, incluindo:</p> <ul> <li><code>__repr__()</code></li> <li><code>__str__()</code></li> </ul> <p>Para representa\u00e7\u00e3o mais ricas a fun\u00e7\u00e3o <code>display()</code> utiliza outros m\u00e9todos, como <code>__repr_html__()</code>, <code>__repr_json__()</code>, <code>__repr_latex__()</code>, entre outras.` A escolha do m\u00e9todo ocorre automaticamente, conforme o tipo de dado.</p> <p>Embora n\u00e3o seja necess\u00e1rio compreender detalhadamente esses m\u00e9todos nem a exibi\u00e7\u00e3o de formata\u00e7\u00f5es avan\u00e7adas, \u00e9 \u00fatil saber que eles existem e que o Jupyter os utiliza para proporcionar visualiza\u00e7\u00f5es mais informativas.</p> <p>Importante:</p> <p>Na pr\u00e1tica, sempre que uma vari\u00e1vel \u00e9 declarada ao final de uma c\u00e9lula, o Jupyter chama a fun\u00e7\u00e3o <code>display()</code> automaticamente nos bastidores. No entanto, \u00e9 poss\u00edvel utilizar display() diretamente em qualquer parte do c\u00f3digo para exibir dados antes do fim da c\u00e9lula.</p>"},{"location":"saida-de-dados/saida-de-dados.html#print-com-mais-de-um-argumento","title":"Print com mais de um argumento\u00b6","text":""},{"location":"saida-de-dados/saida-de-dados.html#argumentos-sep-e-end","title":"Argumentos sep e end\u00b6","text":""}]}